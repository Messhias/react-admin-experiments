{"version":3,"sources":["layout/saturn.jpg","resources/segments/data.js","resources/people/SegmentsField.js","resources/people/SegmentInput.js","resources/people/AvatarField.js","resources/people/FullNameField.js","resources/people/CustomerLinkField.js","resources/people/ColoredNumberField.js","resources/people/MobileGrid.js","resources/people/PersonList.js","resources/people/PersonCreate.js","resources/orders/NbItemsField.js","resources/products/ProductReferenceField.js","resources/reviews/StarRatingField.js","resources/people/SegmentsInput.js","resources/people/PersonEdit.js","resources/people/Poster.js","resources/people/index.js","resources/people/PersonShow.js","resources/visitors/SegmentsField.js","resources/visitors/SegmentInput.js","resources/visitors/AvatarField.js","resources/visitors/FullNameField.js","resources/visitors/CustomerLinkField.js","resources/visitors/ColoredNumberField.js","resources/visitors/MobileGrid.js","resources/visitors/VisitorList.js","resources/visitors/VisitorCreate.js","resources/visitors/SegmentsInput.js","resources/visitors/VisitorEdit.js","resources/visitors/index.js","resources/visitors/CustomerReferenceField.js","resources/orders/MobileGrid.js","resources/orders/OrderList.js","resources/orders/Basket.js","resources/orders/OrderEdit.js","resources/orders/index.js","resources/products/GridList.js","resources/products/ProductList.js","resources/products/Poster.js","resources/products/ProductCreate.js","resources/products/ProductEdit.js","resources/products/index.js","resources/visitors/AddressField.js","resources/invoices/InvoiceShow.js","resources/invoices/InvoiceList.js","resources/invoices/index.js","resources/categories/LinkToRelatedProducts.js","resources/products/ProductRefField.js","resources/categories/CategoryList.js","resources/products/ThumbnailField.js","resources/categories/CategoryEdit.js","resources/categories/CategoryCreate.js","resources/categories/index.js","resources/reviews/BulkAcceptButton.js","resources/reviews/BulkRejectButton.js","resources/reviews/ReviewListMobile.js","resources/reviews/rowStyle.js","resources/reviews/ReviewListDesktop.js","resources/reviews/ReviewFilter.js","resources/reviews/AcceptButton.js","resources/reviews/reviewActions.js","resources/reviews/RejectButton.js","resources/reviews/ReviewEditToolbar.js","resources/reviews/ReviewEdit.js","resources/reviews/ReviewList.js","resources/reviews/index.js","resources/servers/ServerCreate.js","resources/servers/index.js","resources/posts/PostList.js","resources/posts/AddCommentButton.js","resources/posts/PostShow.js","resources/posts/PostCreate.js","resources/posts/index.js","resources/index.js","configuration/Configuration.js","configuration/actions.js","resources/segments/LinkToRelatedCustomers.js","resources/segments/Segments.js","components/tools/HostsEditor/data.js","components/tools/HostsEditor/index.js","components/tools/CSVImporterCard/CSVImporterCard.js","components/tools/CSVImporterCard/CSVToArray.js","components/tools/CSVImporterCard/index.js","routes.js","authProvider.js","resources/reviews/reviewSaga.js","sagas.js","themeReducer.js","layout/AppBar.js","layout/SubMenu.js","layout/Menu.js","layout/themes.js","layout/Layout.js","layout/Login.js","dashboard/Welcome.js","dashboard/CardIcon.js","dashboard/MonthlyRevenue.js","dashboard/NbNewOrders.js","dashboard/PendingOrders.js","dashboard/PendingReviews.js","dashboard/NewCustomers.js","dashboard/Dashboard.js","dashboard/index.js","i18n/en.js","providers/dexie.js","App.js","serviceWorker.js","index.js","components/tools/CSVImporterCard/ezgif.com-gif-to-webm.webm"],"names":["module","exports","__webpack_require__","p","segments_data","id","name","styles","main","display","flexWrap","chip","margin","TranslatedSegmentsField","translate","_ref","record","react_default","a","createElement","style","groups","map","segment","Chip_default","key","label","segments","find","s","defaultProps","addLabel","source","TranslatedSegmentInput","compose","withStyles","input","width","classes","rest","Object","objectWithoutProperties","SelectInput","assign","choices","className","AvatarField","size","Avatar_default","src","concat","avatar","height","PureFullNameField","pure","_ref$record","alignItems","people_AvatarField","first_name","last_name","CustomerLinkField","props","Link","to","people_FullNameField","ColoredNumberField","WrappedComponent","Colored","color","displayName","colored","NumberField","MobileGrid","ids","data","basePath","Card_default","card","CardHeader_default","title","cardTitleContent","EditButton","resource","CardContent_default","cardContent","DateField","type","parseInt","nb_commands","people_ColoredNumberField","options","currency","length","people_SegmentsField","enhance","theme","flexDirection","justifyContent","_objectSpread","typography","body1","PersonFilter","Filter","SearchInput","alwaysOn","DateInput","NullableBooleanInput","defaultValue","people_SegmentInput","List","filters","PersonList_PersonFilter","sort","field","order","perPage","Responsive","xsmall","people_MobileGrid","medium","Datagrid","people_CustomerLinkField","CloneButton","marginLeft","email","address","maxWidth","zipcode","city","comment","overflow","textOverflow","whiteSpace","Create","TabbedForm","FormTab","TextInput","autoFocus","formClassName","validation","fullWidth","path","LongTextInput","render","basket","NbItemsField","FunctionField","textAlign","ProductReferenceField","ReferenceField","reference","TextField","opacity","StarRatingField","Array","rating","fill","_","i","Stars_default","TranslatedSegmentsInput","addField","SelectArrayInput","PersonTitle","_ref2","Edit","PersonEdit_PersonTitle","ReferenceManyField","target","orders_NbItemsField","filter","status","products_ProductReferenceField","reviews_StarRatingField","cellClassName","padding","people_SegmentsInput","Poster","root","marginTop","zIndex","content","&:last-child","img","minWidth","maxHeight","alt","people","list","PersonList","create","PersonCreate","edit","PersonEdit","show","Show","TabbedShowLayout","tabs","TabbedShowLayoutTabs","scrollable","Tab","people_Poster","icon","PersonIcon","visitors_AvatarField","visitors_FullNameField","visitors_ColoredNumberField","visitors_SegmentsField","MobileGrid_objectSpread","VisitorFilter","visitors_SegmentInput","VisitorList_VisitorFilter","visitors_MobileGrid","visitors_CustomerLinkField","showTime","BooleanField","VisitorTitle","resources_visitors","VisitorList","VisitorCreate","VisitorEdit_VisitorTitle","visitors_SegmentsInput","VisitorIcon","CustomerReferenceField","cardContentRow","visitors_CustomerReferenceField","total","OrderFilter","ReferenceInput","AutocompleteInput","optionText","choice","TabbedDatagrid","state","ordered","delivered","cancelled","handleChange","event","value","_this$props","_this","filterValues","setFilters","OrderList_objectSpread","_this$props2","this","react","Tabs_default","centered","indicatorColor","onChange","Tab_default","Divider_default","orders_MobileGrid","defineProperty","React","Component","StyledTabbedDatagrid","fontWeight","OrderList","filterDefaultValues","Basket","fetchData","crudGetMany","item","product_id","products","Paper_default","container","Table_default","TableHead_default","TableRow_default","TableCell_default","rightAlignedCell","TableBody_default","price","toLocaleString","undefined","quantity","colSpan","total_ex_taxes","delivery_fees","tax_rate","boldCell","classnames","connect","productId","admin","resources","r","reduce","prev","next","crudGetManyAction","OrderTitle","resources_orders","aside","orders_Basket","SimpleForm","disabled","BooleanInput","OrderIcon","getColsForWidth","LoadingGridList","nbChildren","fn","_ref$nbItems","nbItems","GridList_default","cellHeight","cols","gridList","GridListTile_default","placeholder","from","LoadedGridList","component","linkToRecord","thumbnail","GridListTileBar_default","tileBar","subtitle","withWidth","background","backgroundColor","palette","grey","fontSize","link","_ref3","loadedOnce","GridList_LoadedGridList","GridList_LoadingGridList","QuickFilter","marginBottom","ProductFilter","NumberInput","ProductList","ProductList_ProductFilter","products_GridList","image","stock","widthFormGroup","heightFormGroup","validate","required","allowEmpty","esm","ProductTitle","ProductEdit_objectSpread","createStyles","resources_products","ProductCreate","ProductEdit_ProductTitle","products_Poster","pagination","Pagination","ProductIcon","AddressField","CustomerField","Typography_default","InvoiceShow","ShowController","Grid_default","spacing","xs","variant","gutterBottom","align","linkType","InvoiceShow_CustomerField","Date","date","toLocaleDateString","ListFilters","invoices","InvoiceList_ListFilters","rowClick","expand","invoices_InvoiceShow","visitors_AddressField","InvoiceIcon","paddingRight","Button_default","pathname","search","stringify","page","JSON","category_id","ProductRefField","categories_LinkToRelatedProducts","es_Link","smart_count","CategoriesActions","NodeActions","SaveButton","IgnoreFormProps","DeleteButton","categories","Tree","NodeView","actions","categories_CategoriesActions","CategoryCreate","BulkAcceptButton","handleClick","startUndoable","selectedIds","crudUpdateMany","button_Button","onClick","ThumbUp_default","BulkRejectButton","ThumbDown_default","ReviewMobileList","_ref$classes","isLoading","List_default","ListItem_default","button","ListItemAvatar_default","ListItemText_default","primary","inline","secondary","secondaryTypographyProps","noWrap","hasBulkActions","textDecoration","rowStyle","index","defaultStyle","arguments","rowStyle_objectSpread","borderLeftColor","green","borderLeftWidth","borderLeftStyle","orange","red","headerRow","sideEffects","onSuccess","notification","body","level","redirectTo","onFailure","selector","formValueSelector","Mutation","payload","approve","REVIEW_APPROVE_FAILURE","REVIEW_REJECT_FAILURE","RejectButton","handleReject","reviewReject","RejectButton_objectSpread","reviewActions_objectSpread","meta","fetch","UPDATE","handleSubmitWithRedirect","invalid","saving","Toolbar_default","reviews_AcceptButton","reviews_RejectButton","redirect","submitOnEnter","_form","paddingTop","form","breakpoints","up","down","inlineField","onCancel","EditController","controllerProps","IconButton_default","Close_default","save","version","toolbar","reviews_ReviewEditToolbar","rowsMax","ReviewsBulkActionButtons","reviews_BulkAcceptButton","reviews_BulkRejectButton","BulkDeleteButton","ReviewList","handleClose","push","_this2","Route","match","isMatch","params","listWithDrawer","bulkActionButtons","ReviewList_ReviewsBulkActionButtons","reviews_ReviewFilter","ReviewListMobile","reviews_ReviewListDesktop","Drawer_default","open","anchor","onClose","paper","drawerPaper","reviews_ReviewEdit","flexGrow","transition","transitions","duration","enteringScreen","marginRight","resources_reviews","ReviewIcon","servers","ServerCreate","ListGuesser","ShowGuesser","EditGuesser","PostList","small","SimpleList","primaryText","ShowButton","ChatBubble_default","PostShow","RichTextField","stripTags","posts_AddCommentButton","PostCreateToolbar","form_Toolbar","getDefaultDate","PostCreate","PostCreate_PostCreateToolbar","average_note","values","errors","forEach","FormDataConsumer","formData","posts","BookIcon","visitors","orders","reviews","locale","i18n","changeLocale","changeTheme","Title","segments_LinkToRelatedCustomers","HostsEditor_data","ip","host","hosts","CSVImporterCard","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleNext","setState","prevState","csvImporterCardStep","activeStep","handleBack","imageResults","smartTextareaModal","started","json","materialTableColumns","fields","tableName","progressOne","progressTwo","progress","csvImporterCardMaxSteps","nlpInput","chooseFile","bind","assertThisInitialized","processContent","result","strData","strDelimiter","objPattern","RegExp","arrData","arrMatches","exec","strMatchedValue","strMatchedDelimiter","replace","CSVToArray","header","reactGridHeaders","editable","headers","Promise","resolve","then","rawData","lastProgress","row","resolveRow","console","log","locked","playCogs","document","getElementById","pause","output","includes","insertid","unshift","rawHeaders","x","_this3","fileReader","FileReader","onprogress","lengthComputable","setProgress","loaded","onloadend","readAsText","files","_this4","_this$state","imageSrc","CardMedia_default","cardMedia","controls","autoPlay","loop","WebmGogs","position","index_es","inputH","multiple","htmlFor","ref","elem","progressBarElement","progressBarTwo","wordWrap","CardActions_default","MobileStepper_default","steps","nextButton","direction","KeyboardArrowLeft_default","KeyboardArrowRight_default","backButton","valueContainer","flex","unit","chipFocused","emphasize","noOptionsMessage","singleValue","left","right","divider","modalPaper","boxShadow","shadows","outline","appBar","gridTile","gridRoot","overflowX","transform","layout","top","withTheme","db","Dexie","require","tracking","window","SwipeableViews","TabPanel","children","other","role","hidden","aria-labelledby","a11yProps","aria-controls","rows","complete","MainDashboard","onGridRowsUpdated","fromRow","toRow","updated","detectFace","tracker","ObjectTracker","setStepSize","track","on","etc","alert","dataUrls","rect","times","naturalWidth","offsetWidth","canvas","getContext","drawImage","y","dataUrl","toDataURL","handlecsvImporterCardStepChange","dialogOpen","onChangeSmartTextarea","handleChangeTab","importData","alaSqlImport","checkData","getImportedData","openDialog","handleCloseDialog","preventDefault","schema","join","toString","stores","table","bulkAdd","lastKey","play","idx","setTimeout","readAsDataURL","prevProps","nodes","slice","links","NoSsr_default","_this$state2","AppBar_default","scrollButtons","textColor","aria-label","Phone_default","Favorite_default","PersonPin_default","Help_default","ShoppingBasket_default","iconButton","bottom","routes","es_Route","exact","HostsEditor","Configuration","Segments","authProvider","AUTH_LOGIN","username","localStorage","setItem","AUTH_LOGOUT","removeItem","AUTH_ERROR","AUTH_CHECK","getItem","reject","reviewSaga","regenerator_default","wrap","_context3","all","takeEvery","mark","_callee","error","_context","stop","_callee2","_context2","_marked","sagas","themeReducer","previousState","CustomUserMenu","UserMenu","MenuItemLink","leftIcon","Settings_default","spacer","layout_AppBar","userMenu","listItem","paddingLeft","listItemText","listItemIcon","sidebarIsOpen","sidebarIsClosed","handleToggle","isOpen","dense","ListItemIcon_default","ExpandMore_default","inset","Collapse_default","in","timeout","unmountOnExit","disablePadding","Menu","menuCatalog","menuSales","menuCustomers","menuTools","menu","onMenuClick","logout","DashboardMenuItem","layout_SubMenu","Build_default","Label_default","menuCustomer","withRouter","ui","sidebarOpen","lightTheme","light","dark","contrastText","newTheme","common","black","white","default","text","hint","CustomSidebar","Sidebar","minHeight","appFrame","contentWithSidebar","Layout","AppBar","sidebar","renderInput","_ref$meta","touched","inputProps","esm_extends","TextField_default","helperText","Login","login","auth","userLogin","location","nextPathname","handleSubmit","Lock_default","onSubmit","Field","CircularProgress_default","thickness","Notification","EnhancedLogin","reduxForm","password","loading","backgroundRepeat","backgroundSize","LoginWithTheme","core_styles","createMuiTheme","Math","random","media","href","Home_default","Code_default","float","borderRadius","Icon","bgColor","dashboard_CardIcon","DollarIcon","ShoppingCartIcon","cost","_ref$orders","_ref$customers","customers","customer_id","nb_items","customer_name","ListItemSecondaryAction_default","query","titleLink","overflowY","WebkitLineClamp","WebkitBoxOrient","_ref$reviews","nb","CommentIcon","_ref$visitors","CustomerIcon","flexColumn","leftCol","rightCol","singleCol","Dashboard","fetchOrders","fetchReviews","fetchCustomers","dataProvider","aMonthAgo","setDate","getDate","GET_LIST","date_gte","toISOString","recentOrders","aggregations","stats","revenue","nbNewOrders","pendingOrders","minimumFractionDigits","maximumFractionDigits","GET_MANY","pendingOrdersCustomers","customer","nbPendingReviews","pendingReviews","min","review","pendingReviewsCustomers","has_ordered","first_seen_gte","newCustomers","nbNewCustomers","Input_default","FindInPage_default","ViewList_default","Assignment_default","Map_default","dashboard_Welcome","dashboard_MonthlyRevenue","dashboard_NbNewOrders","dashboard_PendingOrders","dashboard_PendingReviews","dashboard_NewCustomers","viewVersion","withDataProvider","en","englishMessages","pos","configuration","language","dashboard","monthly_revenue","new_orders","pending_reviews","new_customers","pending_orders","items","welcome","aor_button","demo_button","sales","catalog","commands","last_seen_gte","total_spent","identity","delete","delivery","sum","unit_price","date_lte","total_gte","returned","command_id","height_gte","height_lte","stock_lte","width_gte","width_lte","details","description","detail","action","accept","approved_success","approved_error","rejected_success","rejected_error","compulsive","collector","ordered_once","regular","returns","reviewer","tags","todos","history","galleries","users","dexie","DELETE","GET_ONE","get","CREATE","add","update","GET_MANY_REFERENCE","count","offset","limit","toArray","totalCount","i18nProvider","e","messages","App","dexieDataProxiver","Admin","customReducers","customSagas","customRoutes","loginPage","appLayout","Resource","Boolean","hostname","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.80d55f4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/saturn.f2cf9919.jpg\";","export default [\n    { id: 'compulsive', name: 'resources.segments.data.compulsive' },\n    { id: 'collector', name: 'resources.segments.data.collector' },\n    { id: 'ordered_once', name: 'resources.segments.data.ordered_once' },\n    { id: 'regular', name: 'resources.segments.data.regular' },\n    { id: 'returns', name: 'resources.segments.data.returns' },\n    { id: 'reviewer', name: 'resources.segments.data.reviewer' },\n];\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { translate } from 'react-admin';\nimport segments from '../segments/data';\n\nconst styles = {\n    main: { display: 'flex', flexWrap: 'wrap' },\n    chip: { margin: 4 },\n};\n\nconst SegmentsField = ({ record, translate }) => (\n    <span style={styles.main}>\n        {record.groups &&\n            record.groups.map(segment => (\n                <Chip\n                    key={segment}\n                    style={styles.chip}\n                    label={translate(segments.find(s => s.id === segment).name)}\n                />\n            ))}\n    </span>\n);\n\nconst TranslatedSegmentsField = translate(SegmentsField);\n\nTranslatedSegmentsField.defaultProps = {\n    addLabel: true,\n    source: 'groups',\n};\n\nexport default TranslatedSegmentsField;\n","import React from 'react';\nimport { translate, SelectInput } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport compose from 'recompose/compose';\n\nimport segments from '../segments/data';\n\nconst styles = {\n    input: { width: 150 },\n};\n\nconst SegmentInput = ({ classes, translate, ...rest }) => (\n    <SelectInput\n        {...rest}\n        choices={segments.map(segment => ({\n            id: segment.id,\n            name: translate(segment.name),\n        }))}\n        className={classes.input}\n    />\n);\n\nconst TranslatedSegmentInput = compose(\n    translate,\n    withStyles(styles)\n)(SegmentInput);\n\nTranslatedSegmentInput.defaultProps = {\n    source: 'groups',\n};\n\nexport default TranslatedSegmentInput;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst AvatarField = ({ record, size }) => (\n    <Avatar\n        src={`${record.avatar}?size=${size}x${size}`}\n        size={size}\n        style={{ width: size, height: size }}\n    />\n);\n\nAvatarField.defaultProps = {\n    size: 25,\n};\n\nexport default AvatarField;\n","import React from 'react';\nimport AvatarField from './AvatarField';\nimport pure from 'recompose/pure';\n\nconst FullNameField = ({ record = {}, size }) => (\n    <div style={{ display: 'flex', flexWrap: 'nowrap', alignItems: 'center' }}>\n        <AvatarField record={record} size={size} />\n        &nbsp;{record.first_name} {record.last_name}\n    </div>\n);\n\nconst PureFullNameField = pure(FullNameField);\n\nPureFullNameField.defaultProps = {\n    source: 'last_name',\n    label: 'resources.persons.fields.name',\n};\n\nexport default PureFullNameField;\n","import React from 'react';\nimport { Link } from 'react-admin';\n\nimport FullNameField from './FullNameField';\n\nconst CustomerLinkField = props => (\n    <Link to={`/people/${props.record.id}/show`}>\n        <FullNameField {...props} />\n    </Link>\n);\n\nCustomerLinkField.defaultProps = {\n    source: 'person_id',\n    addLabel: true,\n};\n\nexport default CustomerLinkField;\n","import React from 'react';\nimport { NumberField } from 'react-admin';\n\nconst colored = WrappedComponent => {\n    const Colored = props =>\n        props.record[props.source] > 500 ? (\n            <span style={{ color: 'red' }}>\n                <WrappedComponent {...props} />\n            </span>\n        ) : (\n            <WrappedComponent {...props} />\n        );\n\n    Colored.displayName = `Colored(${WrappedComponent.displayName})`;\n\n    return Colored;\n};\n\nconst ColoredNumberField = colored(NumberField);\nColoredNumberField.defaultProps = NumberField.defaultProps;\n\nexport default ColoredNumberField;\n","// in src/comments.js\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DateField, EditButton, translate, NumberField } from 'react-admin';\n\nimport AvatarField from './AvatarField';\nimport ColoredNumberField from './ColoredNumberField';\nimport SegmentsField from './SegmentsField';\n\nconst listStyles = theme => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0.5rem 0',\n    },\n    cardTitleContent: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    cardContent: {\n        ...theme.typography.body1,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nconst MobileGrid = ({ classes, ids, data, basePath, translate }) => (\n    <div style={{ margin: '1em' }}>\n        {ids.map(id => (\n            <Card key={id} className={classes.card}>\n                <CardHeader\n                    title={\n                        <div className={classes.cardTitleContent}>\n                            <h2>{`${data[id].first_name} ${\n                                data[id].last_name\n                            }`}</h2>\n                            <EditButton\n                                resource=\"persons\"\n                                basePath={basePath}\n                                record={data[id]}\n                            />\n                        </div>\n                    }\n                    avatar={<AvatarField record={data[id]} size=\"45\" />}\n                />\n                <CardContent className={classes.cardContent}>\n                    <div>\n                        {translate('resources.persons.fields.last_seen_gte')}\n                        &nbsp;\n                        <DateField\n                            record={data[id]}\n                            source=\"last_seen\"\n                            type=\"date\"\n                        />\n                    </div>\n                    <div>\n                        {translate(\n                            'resources.commands.name',\n                            parseInt(data[id].nb_commands, 10) || 1\n                        )}\n                        &nbsp;:&nbsp;\n                        <NumberField\n                            record={data[id]}\n                            source=\"nb_commands\"\n                            label=\"resources.persons.fields.commands\"\n                            className={classes.nb_commands}\n                        />\n                    </div>\n                    <div>\n                        {translate('resources.persons.fields.total_spent')}\n                        &nbsp; :{' '}\n                        <ColoredNumberField\n                            record={data[id]}\n                            source=\"total_spent\"\n                            options={{ style: 'currency', currency: 'USD' }}\n                        />\n                    </div>\n                </CardContent>\n                {data[id].groups && data[id].groups.length > 0 && (\n                    <CardContent className={classes.cardContent}>\n                        <SegmentsField record={data[id]} />\n                    </CardContent>\n                )}\n            </Card>\n        ))}\n    </div>\n);\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nconst enhance = compose(\n    withStyles(listStyles),\n    translate\n);\n\nexport default enhance(MobileGrid);\n","import React from 'react';\nimport {\n    BooleanField,\n    Datagrid,\n    DateField,\n    DateInput,\n    EditButton,\n    Filter,\n    List,\n    NullableBooleanInput,\n    NumberField,\n    Responsive,\n    SearchInput,\n    CloneButton\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport SegmentsField from './SegmentsField';\nimport SegmentInput from './SegmentInput';\nimport CustomerLinkField from './CustomerLinkField';\nimport ColoredNumberField from './ColoredNumberField';\nimport MobileGrid from './MobileGrid';\n\nconst PersonFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <DateInput source=\"last_seen_gte\" />\n        <NullableBooleanInput source=\"has_ordered\" />\n        <NullableBooleanInput source=\"has_newsletter\" defaultValue />\n        <SegmentInput />\n\n    </Filter>\n);\n\nconst styles = {\n    nb_commands: { color: 'purple' },\n};\n\nconst PersonList = ({ classes, ...props }) => (\n    <List\n        {...props}\n        filters={<PersonFilter />}\n        sort={{ field: 'last_seen', order: 'DESC' }}\n        perPage={25}\n    >\n        <Responsive\n            xsmall={<MobileGrid />}\n            medium={\n                <Datagrid>\n                    <CustomerLinkField />\n                    <DateField source=\"last_seen\" type=\"date\" />\n                    \n                    <SegmentsField />\n                    <EditButton />\n            <CloneButton />\n\n                </Datagrid>\n            }\n        />\n    </List>\n);\n\nexport default withStyles(styles)(PersonList);\n","import React from 'react';\nimport {\n    Create,\n    DateInput,\n    FormTab,\n    LongTextInput,\n    TabbedForm,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nexport const styles = {\n    first_name: { display: 'inline-block' },\n    last_name: { display: 'inline-block', marginLeft: 32 },\n    email: { width: 544 },\n    address: { maxWidth: 544 },\n    zipcode: { display: 'inline-block' },\n    city: { display: 'inline-block', marginLeft: 32 },\n    comment: {\n        maxWidth: '20em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst PersonCreate = ({ classes, ...props }) => (\n    <Create {...props}>\n        <TabbedForm>\n            <FormTab label=\"Identification\">\n                <TextInput\n                    autoFocus\n                    source=\"first_name\"\n                    formClassName={classes.first_name}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    formClassName={classes.last_name}\n                />\n                <TextInput\n                    type=\"email\"\n                    source=\"email\"\n                    validation={{ email: true }}\n                    fullWidth={true}\n                    formClassName={classes.email}\n                />\n                <DateInput source=\"birthday\" />\n                <TextInput\n                    \n                    source=\"avatar\"\n                    formClassName={classes.first_name}\n                />\n            </FormTab>\n            <FormTab label=\"resources.persons.tabs.address\" path=\"address\">\n                <LongTextInput\n                    source=\"address\"\n                    formClassName={classes.address}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.zipcode} />\n                <TextInput source=\"city\" formClassName={classes.city} />\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default withStyles(styles)(PersonCreate);\n","import React from 'react';\nimport { FunctionField } from 'react-admin';\n\nconst render = record => record.basket.length;\n\nconst NbItemsField = props => <FunctionField {...props} render={render} />;\n\nNbItemsField.defaultProps = {\n    label: 'Nb Items',\n    textAlign: 'right',\n};\n\nexport default NbItemsField;\n","import React from 'react';\nimport { ReferenceField, TextField } from 'react-admin';\n\nconst ProductReferenceField = props => (\n    <ReferenceField\n        label=\"Product\"\n        source=\"product_id\"\n        reference=\"products\"\n        {...props}\n    >\n        <TextField source=\"reference\" />\n    </ReferenceField>\n);\n\nProductReferenceField.defaultProps = {\n    source: 'product_id',\n    addLabel: true,\n};\n\nexport default ProductReferenceField;\n","import React from 'react';\nimport Icon from '@material-ui/icons/Stars';\n\nconst style = { opacity: 0.87, width: 20, height: 20 };\n\nconst StarRatingField = ({ record }) => (\n    <span>\n        {Array(record.rating)\n            .fill(true)\n            .map((_, i) => (\n                <Icon key={i} style={style} />\n            ))}\n    </span>\n);\n\nStarRatingField.defaultProps = {\n    label: 'resources.reviews.fields.rating',\n    source: 'rating',\n    addLabel: true,\n};\n\nexport default StarRatingField;\n","import React from 'react';\nimport { translate, SelectArrayInput } from 'react-admin';\n\nimport segments from '../segments/data';\n\nconst SegmentsInput = ({ translate, addField, ...rest }) => (\n    <SelectArrayInput\n        {...rest}\n        choices={segments.map(segment => ({\n            id: segment.id,\n            name: translate(segment.name),\n        }))}\n    />\n);\n\nconst TranslatedSegmentsInput = translate(SegmentsInput);\n\nTranslatedSegmentsInput.defaultProps = {\n    addField: true,\n    source: 'groups',\n};\n\nexport default TranslatedSegmentsInput;\n","import React from 'react';\nimport {\n    Datagrid,\n    DateField,\n    DateInput,\n    Edit,\n    EditButton,\n    FormTab,\n    LongTextInput,\n    NullableBooleanInput,\n    NumberField,\n    ReferenceManyField,\n    TabbedForm,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport NbItemsField from '../orders/NbItemsField';\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\nimport FullNameField from './FullNameField';\nimport SegmentsInput from './SegmentsInput';\nimport { styles } from './PersonCreate';\n\nconst PersonTitle = ({ record }) =>\n    record ? <FullNameField record={record} size={32} /> : null;\n\nconst PersonEdit = ({ classes, ...props }) => (\n    <Edit title={<PersonTitle />} {...props}>\n        <TabbedForm>\n            <FormTab label=\"resources.persons.tabs.identity\">\n                <TextInput\n                    \n                    source=\"avatar\"\n                    formClassName={classes.first_name}\n                />\n                <TextInput\n                    source=\"first_name\"\n                    formClassName={classes.first_name}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    formClassName={classes.last_name}\n                />\n                <TextInput\n                    type=\"email\"\n                    source=\"email\"\n                    validation={{ email: true }}\n                    fullWidth={true}\n                    formClassName={classes.email}\n                />\n                <DateInput source=\"birthday\" />\n            </FormTab>\n            <FormTab label=\"resources.persons.tabs.address\" path=\"address\">\n                <LongTextInput\n                    source=\"address\"\n                    formClassName={classes.address}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.zipcode} />\n                <TextInput source=\"city\" formClassName={classes.city} />\n            </FormTab>\n            <FormTab label=\"resources.persons.tabs.orders\" path=\"orders\">\n                <ReferenceManyField\n                    addLabel={false}\n                    sort={{ field: 'date', order: 'DESC' }}\n                    reference=\"commands\"\n                    target=\"person_id\"\n                >\n                    <Datagrid>\n                        <DateField source=\"date\" />\n                        <TextField source=\"reference\" />\n                        <NbItemsField />\n                        <NumberField\n                            source=\"total\"\n                            options={{ style: 'currency', currency: 'USD' }}\n                        />\n                        <TextField source=\"status\" />\n                        <EditButton />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n            <FormTab label=\"resources.persons.tabs.reviews\" path=\"reviews\">\n                <ReferenceManyField\n                    addLabel={false}\n                    sort={{ field: 'date', order: 'DESC' }}\n                    reference=\"reviews\"\n                    target=\"person_id\"\n                >\n                    <Datagrid filter={{ status: 'approved' }}>\n                        <DateField source=\"date\" />\n                        <ProductReferenceField />\n                        <StarRatingField />\n                        <TextField\n                            source=\"comment\"\n                            cellClassName={classes.comment}\n                        />\n                        <EditButton style={{ padding: 0 }} />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n            <FormTab label=\"resources.persons.tabs.stats\" path=\"stats\">\n                <SegmentsInput />\n                <NullableBooleanInput source=\"has_newsletter\" />\n                <DateField\n                    source=\"first_seen\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n                <DateField\n                    source=\"latest_purchase\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n                <DateField\n                    source=\"last_seen\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport default withStyles(styles)(PersonEdit);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n    root: { display: 'inline-block', marginTop: '1em', zIndex: 2 },\n    content: { padding: 0, '&:last-child': { padding: 0 } },\n    img: {\n        width: 'initial',\n        minWidth: 'initial',\n        maxWidth: '42em',\n        maxHeight: '15em',\n    },\n};\n\nconst Poster = withStyles(styles)(({ classes, record }) => (\n    <Card className={classes.root}>\n        <CardContent className={classes.content}>\n            <img src={record.avatar} alt=\"\" className={classes.img} />\n        </CardContent>\n    </Card>\n));\n\nexport default Poster;\n","import PersonIcon from '@material-ui/icons/People';\n\nimport PersonList from './PersonList';\nimport PersonCreate from './PersonCreate';\nimport PersonEdit from './PersonEdit';\nimport { ListGuesser, ShowGuesser } from 'react-admin';\nimport { PersonShow } from './PersonShow';\n// import { PersonList } from './PersonList';\nexport default {\n    list: PersonList,\n    create: PersonCreate,\n    edit: PersonEdit,\n    show:PersonShow,\n    // edit: EditGuesser,\n    icon: PersonIcon,\n};\n","import React from 'react';\nimport {\n    Show,\n    SimpleShowLayout,\n    TextField,\n    DateInput,\n    EditButton,\n    Filter,\n    List,\n    NullableBooleanInput,\n    NumberField,\n    Responsive,\n    SearchInput,\n    TabbedShowLayout,\n    TabbedShowLayoutTabs,\n    Tab\n} from 'react-admin';\nimport Poster from './Poster';\nconst permissions = \"admin\";\nexport const PersonShow = props => (\n\n    <Show {...props}>\n        <TabbedShowLayout tabs={<TabbedShowLayoutTabs scrollable={true}/>}>\n            <Tab label=\"Profile\">\n            <Poster source=\"avatar\" />\n            <TextField source=\"first_name\" />\n            <TextField source=\"last_name\" />\n            </Tab>\n            <Tab label=\"Contats\"></Tab>\n            <Tab label=\"Activities\"></Tab>\n            <Tab label=\"Relationships\"></Tab>\n            <Tab label=\"Content\"></Tab>\n            <Tab label=\"Configure\"></Tab>\n            <Tab label=\"Research\"></Tab>\n            </TabbedShowLayout>\n    </Show>\n    // <Show {...props}>\n    //     <SimpleShowLayout>\n    //         \n    //         <TextField source=\"id\" />\n    //     </SimpleShowLayout>\n    // </Show>\n);","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { translate } from 'react-admin';\nimport segments from '../segments/data';\n\nconst styles = {\n    main: { display: 'flex', flexWrap: 'wrap' },\n    chip: { margin: 4 },\n};\n\nconst SegmentsField = ({ record, translate }) => (\n    <span style={styles.main}>\n        {record.groups &&\n            record.groups.map(segment => (\n                <Chip\n                    key={segment}\n                    style={styles.chip}\n                    label={translate(segments.find(s => s.id === segment).name)}\n                />\n            ))}\n    </span>\n);\n\nconst TranslatedSegmentsField = translate(SegmentsField);\n\nTranslatedSegmentsField.defaultProps = {\n    addLabel: true,\n    source: 'groups',\n};\n\nexport default TranslatedSegmentsField;\n","import React from 'react';\nimport { translate, SelectInput } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport compose from 'recompose/compose';\n\nimport segments from '../segments/data';\n\nconst styles = {\n    input: { width: 150 },\n};\n\nconst SegmentInput = ({ classes, translate, ...rest }) => (\n    <SelectInput\n        {...rest}\n        choices={segments.map(segment => ({\n            id: segment.id,\n            name: translate(segment.name),\n        }))}\n        className={classes.input}\n    />\n);\n\nconst TranslatedSegmentInput = compose(\n    translate,\n    withStyles(styles)\n)(SegmentInput);\n\nTranslatedSegmentInput.defaultProps = {\n    source: 'groups',\n};\n\nexport default TranslatedSegmentInput;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst AvatarField = ({ record, size }) => (\n    <Avatar\n        src={`${record.avatar}?size=${size}x${size}`}\n        size={size}\n        style={{ width: size, height: size }}\n    />\n);\n\nAvatarField.defaultProps = {\n    size: 25,\n};\n\nexport default AvatarField;\n","import React from 'react';\nimport AvatarField from './AvatarField';\nimport pure from 'recompose/pure';\n\nconst FullNameField = ({ record = {}, size }) => (\n    <div style={{ display: 'flex', flexWrap: 'nowrap', alignItems: 'center' }}>\n        <AvatarField record={record} size={size} />\n        &nbsp;{record.first_name} {record.last_name}\n    </div>\n);\n\nconst PureFullNameField = pure(FullNameField);\n\nPureFullNameField.defaultProps = {\n    source: 'last_name',\n    label: 'resources.customers.fields.name',\n};\n\nexport default PureFullNameField;\n","import React from 'react';\nimport { Link } from 'react-admin';\n\nimport FullNameField from './FullNameField';\n\nconst CustomerLinkField = props => (\n    <Link to={`/customers/${props.record.id}`}>\n        <FullNameField {...props} />\n    </Link>\n);\n\nCustomerLinkField.defaultProps = {\n    source: 'customer_id',\n    addLabel: true,\n};\n\nexport default CustomerLinkField;\n","import React from 'react';\nimport { NumberField } from 'react-admin';\n\nconst colored = WrappedComponent => {\n    const Colored = props =>\n        props.record[props.source] > 500 ? (\n            <span style={{ color: 'red' }}>\n                <WrappedComponent {...props} />\n            </span>\n        ) : (\n            <WrappedComponent {...props} />\n        );\n\n    Colored.displayName = `Colored(${WrappedComponent.displayName})`;\n\n    return Colored;\n};\n\nconst ColoredNumberField = colored(NumberField);\nColoredNumberField.defaultProps = NumberField.defaultProps;\n\nexport default ColoredNumberField;\n","// in src/comments.js\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DateField, EditButton, translate, NumberField } from 'react-admin';\n\nimport AvatarField from './AvatarField';\nimport ColoredNumberField from './ColoredNumberField';\nimport SegmentsField from './SegmentsField';\n\nconst listStyles = theme => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0.5rem 0',\n    },\n    cardTitleContent: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    cardContent: {\n        ...theme.typography.body1,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nconst MobileGrid = ({ classes, ids, data, basePath, translate }) => (\n    <div style={{ margin: '1em' }}>\n        {ids.map(id => (\n            <Card key={id} className={classes.card}>\n                <CardHeader\n                    title={\n                        <div className={classes.cardTitleContent}>\n                            <h2>{`${data[id].first_name} ${\n                                data[id].last_name\n                            }`}</h2>\n                            <EditButton\n                                resource=\"visitors\"\n                                basePath={basePath}\n                                record={data[id]}\n                            />\n                        </div>\n                    }\n                    avatar={<AvatarField record={data[id]} size=\"45\" />}\n                />\n                <CardContent className={classes.cardContent}>\n                    <div>\n                        {translate('resources.customers.fields.last_seen_gte')}\n                        &nbsp;\n                        <DateField\n                            record={data[id]}\n                            source=\"last_seen\"\n                            type=\"date\"\n                        />\n                    </div>\n                    <div>\n                        {translate(\n                            'resources.commands.name',\n                            parseInt(data[id].nb_commands, 10) || 1\n                        )}\n                        &nbsp;:&nbsp;\n                        <NumberField\n                            record={data[id]}\n                            source=\"nb_commands\"\n                            label=\"resources.customers.fields.commands\"\n                            className={classes.nb_commands}\n                        />\n                    </div>\n                    <div>\n                        {translate('resources.customers.fields.total_spent')}\n                        &nbsp; :{' '}\n                        <ColoredNumberField\n                            record={data[id]}\n                            source=\"total_spent\"\n                            options={{ style: 'currency', currency: 'USD' }}\n                        />\n                    </div>\n                </CardContent>\n                {data[id].groups && data[id].groups.length > 0 && (\n                    <CardContent className={classes.cardContent}>\n                        <SegmentsField record={data[id]} />\n                    </CardContent>\n                )}\n            </Card>\n        ))}\n    </div>\n);\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nconst enhance = compose(\n    withStyles(listStyles),\n    translate\n);\n\nexport default enhance(MobileGrid);\n","import React from 'react';\nimport {\n    BooleanField,\n    Datagrid,\n    DateField,\n    DateInput,\n    EditButton,\n    Filter,\n    List,\n    NullableBooleanInput,\n    NumberField,\n    Responsive,\n    SearchInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport SegmentsField from './SegmentsField';\nimport SegmentInput from './SegmentInput';\nimport CustomerLinkField from './CustomerLinkField';\nimport ColoredNumberField from './ColoredNumberField';\nimport MobileGrid from './MobileGrid';\n\nconst VisitorFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <DateInput source=\"last_seen_gte\" />\n        <NullableBooleanInput source=\"has_ordered\" />\n        <NullableBooleanInput source=\"has_newsletter\" defaultValue />\n        <SegmentInput />\n    </Filter>\n);\n\nconst styles = {\n    nb_commands: { color: 'purple' },\n};\n\nconst VisitorList = ({ classes, ...props }) => (\n    <List\n        {...props}\n        filters={<VisitorFilter />}\n        sort={{ field: 'last_seen', order: 'DESC' }}\n        perPage={25}\n    >\n        <Responsive\n            xsmall={<MobileGrid />}\n            medium={\n                <Datagrid>\n                    <CustomerLinkField />\n                    <DateField source=\"last_seen\" type=\"date\" />\n                    <NumberField\n                        source=\"nb_commands\"\n                        label=\"resources.customers.fields.commands\"\n                        className={classes.nb_commands}\n                    />\n                    <ColoredNumberField\n                        source=\"total_spent\"\n                        options={{ style: 'currency', currency: 'USD' }}\n                    />\n                    <DateField source=\"latest_purchase\" showTime />\n                    <BooleanField source=\"has_newsletter\" label=\"News.\" />\n                    <SegmentsField />\n                    <EditButton />\n                </Datagrid>\n            }\n        />\n    </List>\n);\n\nexport default withStyles(styles)(VisitorList);\n","import React from 'react';\nimport {\n    Create,\n    DateInput,\n    FormTab,\n    LongTextInput,\n    TabbedForm,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nexport const styles = {\n    first_name: { display: 'inline-block' },\n    last_name: { display: 'inline-block', marginLeft: 32 },\n    email: { width: 544 },\n    address: { maxWidth: 544 },\n    zipcode: { display: 'inline-block' },\n    city: { display: 'inline-block', marginLeft: 32 },\n    comment: {\n        maxWidth: '20em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst VisitorCreate = ({ classes, ...props }) => (\n    <Create {...props}>\n        <TabbedForm>\n            <FormTab label=\"resources.customers.tabs.identity\">\n                <TextInput\n                    \n                    source=\"avatar\"\n                    formClassName={classes.first_name}\n                />\n                <TextInput\n                    autoFocus\n                    source=\"first_name\"\n                    formClassName={classes.first_name}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    formClassName={classes.last_name}\n                />\n                <TextInput\n                    type=\"email\"\n                    source=\"email\"\n                    validation={{ email: true }}\n                    fullWidth={true}\n                    formClassName={classes.email}\n                />\n                <DateInput source=\"birthday\" />\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.address\" path=\"address\">\n                <LongTextInput\n                    source=\"address\"\n                    formClassName={classes.address}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.zipcode} />\n                <TextInput source=\"city\" formClassName={classes.city} />\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default withStyles(styles)(VisitorCreate);\n","import React from 'react';\nimport { translate, SelectArrayInput } from 'react-admin';\n\nimport segments from '../segments/data';\n\nconst SegmentsInput = ({ translate, addField, ...rest }) => (\n    <SelectArrayInput\n        {...rest}\n        choices={segments.map(segment => ({\n            id: segment.id,\n            name: translate(segment.name),\n        }))}\n    />\n);\n\nconst TranslatedSegmentsInput = translate(SegmentsInput);\n\nTranslatedSegmentsInput.defaultProps = {\n    addField: true,\n    source: 'groups',\n};\n\nexport default TranslatedSegmentsInput;\n","import React from 'react';\nimport {\n    Datagrid,\n    DateField,\n    DateInput,\n    Edit,\n    EditButton,\n    FormTab,\n    LongTextInput,\n    NullableBooleanInput,\n    NumberField,\n    ReferenceManyField,\n    TabbedForm,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport NbItemsField from '../orders/NbItemsField';\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\nimport FullNameField from './FullNameField';\nimport SegmentsInput from './SegmentsInput';\nimport { styles } from './VisitorCreate';\n\nconst VisitorTitle = ({ record }) =>\n    record ? <FullNameField record={record} size={32} /> : null;\n\nconst VisitorEdit = ({ classes, ...props }) => (\n    <Edit title={<VisitorTitle />} {...props}>\n        <TabbedForm>\n            <FormTab label=\"resources.customers.tabs.identity\">\n                <TextInput\n                    \n                    source=\"avatar\"\n                    formClassName={classes.first_name}\n                />\n                <TextInput\n                    source=\"first_name\"\n                    formClassName={classes.first_name}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    formClassName={classes.last_name}\n                />\n                <TextInput\n                    type=\"email\"\n                    source=\"email\"\n                    validation={{ email: true }}\n                    fullWidth={true}\n                    formClassName={classes.email}\n                />\n                <DateInput source=\"birthday\" />\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.address\" path=\"address\">\n                <LongTextInput\n                    source=\"address\"\n                    formClassName={classes.address}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.zipcode} />\n                <TextInput source=\"city\" formClassName={classes.city} />\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.orders\" path=\"orders\">\n                <ReferenceManyField\n                    addLabel={false}\n                    sort={{ field: 'date', order: 'DESC' }}\n                    reference=\"commands\"\n                    target=\"customer_id\"\n                >\n                    <Datagrid>\n                        <DateField source=\"date\" />\n                        <TextField source=\"reference\" />\n                        <NbItemsField />\n                        <NumberField\n                            source=\"total\"\n                            options={{ style: 'currency', currency: 'USD' }}\n                        />\n                        <TextField source=\"status\" />\n                        <EditButton />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.reviews\" path=\"reviews\">\n                <ReferenceManyField\n                    addLabel={false}\n                    sort={{ field: 'date', order: 'DESC' }}\n                    reference=\"reviews\"\n                    target=\"customer_id\"\n                >\n                    <Datagrid filter={{ status: 'approved' }}>\n                        <DateField source=\"date\" />\n                        <ProductReferenceField />\n                        <StarRatingField />\n                        <TextField\n                            source=\"comment\"\n                            cellClassName={classes.comment}\n                        />\n                        <EditButton style={{ padding: 0 }} />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.stats\" path=\"stats\">\n                <SegmentsInput />\n                <NullableBooleanInput source=\"has_newsletter\" />\n                <DateField\n                    source=\"first_seen\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n                <DateField\n                    source=\"latest_purchase\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n                <DateField\n                    source=\"last_seen\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport default withStyles(styles)(VisitorEdit);\n","import VisitorIcon from '@material-ui/icons/People';\n\nimport VisitorList from './VisitorList';\nimport VisitorCreate from './VisitorCreate';\nimport VisitorEdit from './VisitorEdit';\n\nexport default {\n    list: VisitorList,\n    create: VisitorCreate,\n    edit: VisitorEdit,\n    icon: VisitorIcon,\n};\n","import React from 'react';\nimport { ReferenceField } from 'react-admin';\n\nimport FullNameField from './FullNameField';\n\nconst CustomerReferenceField = props => (\n    <ReferenceField source=\"customer_id\" reference=\"customers\" {...props}>\n        <FullNameField />\n    </ReferenceField>\n);\n\nCustomerReferenceField.defaultProps = {\n    source: 'customer_id',\n    addLabel: true,\n};\n\nexport default CustomerReferenceField;\n","// in src/comments.js\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    DateField,\n    EditButton,\n    translate,\n    NumberField,\n    TextField,\n    BooleanField,\n} from 'react-admin';\n\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\n\nconst listStyles = theme => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0.5rem 0',\n    },\n    cardTitleContent: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    cardContent: theme.typography.body1,\n    cardContentRow: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        margin: '0.5rem 0',\n    },\n});\n\nconst MobileGrid = ({ classes, ids, data, basePath, translate }) => (\n    <div style={{ margin: '1em' }}>\n        {ids.map(id => (\n            <Card key={id} className={classes.card}>\n                <CardHeader\n                    title={\n                        <div className={classes.cardTitleContent}>\n                            <span>\n                                {translate('resources.commands.name', 1)}:&nbsp;\n                                <TextField\n                                    record={data[id]}\n                                    source=\"reference\"\n                                />\n                            </span>\n                            <EditButton\n                                resource=\"commands\"\n                                basePath={basePath}\n                                record={data[id]}\n                            />\n                        </div>\n                    }\n                />\n                <CardContent className={classes.cardContent}>\n                    <span className={classes.cardContentRow}>\n                        {translate('resources.customers.name', 1)}:&nbsp;\n                        <CustomerReferenceField\n                            record={data[id]}\n                            basePath={basePath}\n                        />\n                    </span>\n                    <span className={classes.cardContentRow}>\n                        {translate('resources.reviews.fields.date')}:&nbsp;\n                        <DateField record={data[id]} source=\"date\" showTime />\n                    </span>\n                    <span className={classes.cardContentRow}>\n                        {translate('resources.commands.fields.basket.total')}\n                        :&nbsp;\n                        <NumberField\n                            record={data[id]}\n                            source=\"total\"\n                            options={{ style: 'currency', currency: 'USD' }}\n                            className={classes.total}\n                        />\n                    </span>\n                    <span className={classes.cardContentRow}>\n                        {translate('resources.commands.fields.status')}:&nbsp;\n                        <TextField source=\"status\" record={data[id]} />\n                    </span>\n                    <span className={classes.cardContentRow}>\n                        {translate('resources.commands.fields.returned')}:&nbsp;\n                        <BooleanField record={data[id]} source=\"returned\" />\n                    </span>\n                </CardContent>\n            </Card>\n        ))}\n    </div>\n);\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nconst enhance = compose(\n    withStyles(listStyles),\n    translate\n);\n\nexport default enhance(MobileGrid);\n","import React, { Fragment } from 'react';\nimport {\n    AutocompleteInput,\n    BooleanField,\n    Datagrid,\n    DateField,\n    DateInput,\n    EditButton,\n    Filter,\n    List,\n    NullableBooleanInput,\n    NumberField,\n    ReferenceInput,\n    Responsive,\n    SearchInput,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Divider from '@material-ui/core/Divider';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport NbItemsField from './NbItemsField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport MobileGrid from './MobileGrid';\n\nconst filterStyles = {\n    status: { width: 150 },\n};\n\nconst OrderFilter = withStyles(filterStyles)(({ classes, ...props }) => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput source=\"customer_id\" reference=\"customers\">\n            <AutocompleteInput\n                optionText={choice =>\n                    `${choice.first_name} ${choice.last_name}`\n                }\n            />\n        </ReferenceInput>\n        <DateInput source=\"date_gte\" />\n        <DateInput source=\"date_lte\" />\n        <TextInput source=\"total_gte\" />\n        <NullableBooleanInput source=\"returned\" />\n    </Filter>\n));\n\nconst datagridStyles = {\n    total: { fontWeight: 'bold' },\n};\n\nclass TabbedDatagrid extends React.Component {\n    tabs = [\n        { id: 'ordered', name: 'ordered' },\n        { id: 'delivered', name: 'delivered' },\n        { id: 'cancelled', name: 'cancelled' },\n    ];\n\n    state = { ordered: [], delivered: [], cancelled: [] };\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.ids !== state[props.filterValues.status]) {\n            return { ...state, [props.filterValues.status]: props.ids };\n        }\n        return null;\n    }\n\n    handleChange = (event, value) => {\n        const { filterValues, setFilters } = this.props;\n        setFilters({ ...filterValues, status: value });\n    };\n\n    render() {\n        const { classes, filterValues, ...props } = this.props;\n        return (\n            <Fragment>\n                <Tabs\n                    fullWidth\n                    centered\n                    value={filterValues.status}\n                    indicatorColor=\"primary\"\n                    onChange={this.handleChange}\n                >\n                    {this.tabs.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.name}\n                            value={choice.id}\n                        />\n                    ))}\n                </Tabs>\n                <Divider />\n                <Responsive\n                    xsmall={\n                        <MobileGrid\n                            {...props}\n                            ids={this.state[filterValues.status]}\n                        />\n                    }\n                    medium={\n                        <div>\n                            {filterValues.status === 'ordered' && (\n                                <Datagrid {...props} ids={this.state.ordered}>\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                        className={classes.total}\n                                    />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                            {filterValues.status === 'delivered' && (\n                                <Datagrid {...props} ids={this.state.delivered}>\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                        className={classes.total}\n                                    />\n                                    <BooleanField source=\"returned\" />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                            {filterValues.status === 'cancelled' && (\n                                <Datagrid {...props} ids={this.state.cancelled}>\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                        className={classes.total}\n                                    />\n                                    <BooleanField source=\"returned\" />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                        </div>\n                    }\n                />\n            </Fragment>\n        );\n    }\n}\n\nconst StyledTabbedDatagrid = withStyles(datagridStyles)(TabbedDatagrid);\n\nconst OrderList = ({ classes, ...props }) => (\n    <List\n        {...props}\n        filterDefaultValues={{ status: 'ordered' }}\n        sort={{ field: 'date', order: 'DESC' }}\n        perPage={25}\n        filters={<OrderFilter />}\n    >\n        <StyledTabbedDatagrid />\n    </List>\n);\n\nexport default OrderList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Link, translate, crudGetMany as crudGetManyAction } from 'react-admin';\nimport compose from 'recompose/compose';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n    container: { minWidth: '35em', marginLeft: '1em' },\n    rightAlignedCell: { textAlign: 'right' },\n    boldCell: { fontWeight: 'bold' },\n};\n\nclass Basket extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n    fetchData() {\n        const {\n            record: { basket },\n            crudGetMany,\n        } = this.props;\n        crudGetMany('products', basket.map(item => item.product_id));\n    }\n    render() {\n        const { classes, record, products, translate } = this.props;\n        if (!record) return null;\n        const { basket } = record;\n        return (\n            <Paper className={classes.container}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>\n                                {translate(\n                                    'resources.commands.fields.basket.reference'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {translate(\n                                    'resources.commands.fields.basket.unit_price'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {translate(\n                                    'resources.commands.fields.basket.quantity'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {translate(\n                                    'resources.commands.fields.basket.total'\n                                )}\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {basket.map(\n                            item =>\n                                products[item.product_id] && (\n                                    <TableRow key={item.product_id}>\n                                        <TableCell>\n                                            <Link\n                                                to={`/products/${\n                                                    item.product_id\n                                                }`}\n                                            >\n                                                {\n                                                    products[item.product_id]\n                                                        .reference\n                                                }\n                                            </Link>\n                                        </TableCell>\n                                        <TableCell\n                                            className={classes.rightAlignedCell}\n                                        >\n                                            {products[\n                                                item.product_id\n                                            ].price.toLocaleString(undefined, {\n                                                style: 'currency',\n                                                currency: 'USD',\n                                            })}\n                                        </TableCell>\n                                        <TableCell\n                                            className={classes.rightAlignedCell}\n                                        >\n                                            {item.quantity}\n                                        </TableCell>\n                                        <TableCell\n                                            className={classes.rightAlignedCell}\n                                        >\n                                            {(\n                                                products[item.product_id]\n                                                    .price * item.quantity\n                                            ).toLocaleString(undefined, {\n                                                style: 'currency',\n                                                currency: 'USD',\n                                            })}\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                        )}\n                        <TableRow>\n                            <TableCell colSpan={2} />\n                            <TableCell>\n                                {translate(\n                                    'resources.commands.fields.basket.sum'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {record.total_ex_taxes.toLocaleString(\n                                    undefined,\n                                    {\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }\n                                )}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2} />\n                            <TableCell>\n                                {translate(\n                                    'resources.commands.fields.basket.delivery'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {record.delivery_fees.toLocaleString(\n                                    undefined,\n                                    { style: 'currency', currency: 'USD' }\n                                )}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2} />\n                            <TableCell>\n                                {translate(\n                                    'resources.commands.fields.basket.tax_rate'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {record.tax_rate.toLocaleString(undefined, {\n                                    style: 'percent',\n                                })}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2} />\n                            <TableCell className={classes.boldCell}>\n                                {translate(\n                                    'resources.commands.fields.basket.total'\n                                )}\n                            </TableCell>\n                            <TableCell\n                                className={classnames(\n                                    classes.boldCell,\n                                    classes.rightAlignedCell\n                                )}\n                            >\n                                {record.total.toLocaleString(undefined, {\n                                    style: 'currency',\n                                    currency: 'USD',\n                                })}\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </Paper>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const {\n        record: { basket },\n    } = props;\n    const productIds = basket.map(item => item.product_id);\n    return {\n        products: productIds\n            .map(productId => state.admin.resources.products.data[productId])\n            .filter(r => typeof r !== 'undefined')\n            .reduce((prev, next) => {\n                prev[next.id] = next;\n                return prev;\n            }, {}),\n    };\n};\n\nconst enhance = compose(\n    translate,\n    withStyles(styles),\n    connect(\n        mapStateToProps,\n        {\n            crudGetMany: crudGetManyAction,\n        }\n    )\n);\n\nexport default enhance(Basket);\n","import React from 'react';\nimport {\n    translate,\n    AutocompleteInput,\n    BooleanInput,\n    DateInput,\n    Edit,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Basket from './Basket';\n\nconst OrderTitle = translate(({ record, translate }) => (\n    <span>\n        {translate('resources.commands.title', { reference: record.reference })}\n    </span>\n));\n\nconst editStyles = {\n    root: { alignItems: 'flex-start' },\n};\n\nconst OrderEdit = props => (\n    <Edit title={<OrderTitle />} aside={<Basket />} {...props}>\n        <SimpleForm>\n            <DateInput source=\"date\" />\n            <ReferenceInput source=\"customer_id\" reference=\"customers\">\n                <AutocompleteInput\n                    optionText={choice =>\n                        `${choice.first_name} ${choice.last_name}`\n                    }\n                />\n            </ReferenceInput>\n            <SelectInput\n                source=\"status\"\n                choices={[\n                    { id: 'delivered', name: 'delivered' },\n                    { id: 'ordered', name: 'ordered' },\n                    { id: 'cancelled', name: 'cancelled' },\n                    {\n                        id: 'unknown',\n                        name: 'unknown',\n                        disabled: true,\n                    },\n                ]}\n            />\n            <BooleanInput source=\"returned\" />\n        </SimpleForm>\n    </Edit>\n);\n\nexport default withStyles(editStyles)(OrderEdit);\n","import OrderIcon from '@material-ui/icons/AttachMoney';\n\nimport OrderList from './OrderList';\nimport OrderEdit from './OrderEdit';\n\nexport default {\n    list: OrderList,\n    edit: OrderEdit,\n    icon: OrderIcon,\n};\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport MuiGridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { withStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\nimport { Link } from 'react-router-dom';\nimport { NumberField } from 'react-admin';\nimport { linkToRecord } from 'ra-core';\n\nconst styles = theme => ({\n    root: {\n        margin: '-2px',\n    },\n    gridList: {\n        width: '100%',\n        margin: 0,\n    },\n    tileBar: {\n        background:\n            'linear-gradient(to top, rgba(0,0,0,0.8) 0%,rgba(0,0,0,0.4) 70%,rgba(0,0,0,0) 100%)',\n    },\n    placeholder: {\n        backgroundColor: theme.palette.grey[300],\n        height: '100%',\n    },\n    price: {\n        display: 'inline',\n        fontSize: '1em',\n    },\n    link: {\n        color: '#fff',\n    },\n});\n\nconst getColsForWidth = width => {\n    if (width === 'xs') return 2;\n    if (width === 'sm') return 3;\n    if (width === 'md') return 4;\n    if (width === 'lg') return 5;\n    return 6;\n};\n\nconst times = (nbChildren, fn) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = ({ width, classes, nbItems = 10 }) => (\n    <div className={classes.root}>\n        <MuiGridList\n            cellHeight={180}\n            cols={getColsForWidth(width)}\n            className={classes.gridList}\n        >\n            {' '}\n            {times(nbItems, key => (\n                <GridListTile key={key}>\n                    <div className={classes.placeholder} />\n                </GridListTile>\n            ))}\n        </MuiGridList>\n    </div>\n);\n\nconst LoadedGridList = ({ classes, ids, data, basePath, width }) => (\n    <div className={classes.root}>\n        <MuiGridList\n            cellHeight={180}\n            cols={getColsForWidth(width)}\n            className={classes.gridList}\n        >\n            {ids.map(id => (\n                <GridListTile\n                    component={Link}\n                    key={id}\n                    to={linkToRecord(basePath, data[id].id)}\n                >\n                    <img src={data[id].thumbnail} alt=\"\" />\n                    <GridListTileBar\n                        className={classes.tileBar}\n                        title={data[id].reference}\n                        subtitle={\n                            <span>aaaaaaaaaaaaaa\n                                {data[id].width}x{data[id].height},{' '}\n                                <NumberField\n                                    className={classes.price}\n                                    source=\"price\"\n                                    record={data[id]}\n                                    color=\"inherit\"\n                                    options={{\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }}\n                                />\n                            </span>\n                        }\n                    />\n                </GridListTile>\n            ))}\n        </MuiGridList>\n    </div>\n);\n\nconst GridList = ({ loadedOnce, ...props }) =>\n    loadedOnce ? <LoadedGridList {...props} /> : <LoadingGridList {...props} />;\n\nconst enhance = compose(\n    withWidth(),\n    withStyles(styles)\n);\n\nexport default enhance(GridList);\n","import React from 'react';\nimport {\n    translate,\n    Filter,\n    List,\n    NumberInput,\n    ReferenceInput,\n    SearchInput,\n    SelectInput,\n} from 'react-admin';\nimport Chip from '@material-ui/core/Chip';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport GridList from './GridList';\n\nconst quickFilterStyles = {\n    root: {\n        marginBottom: '0.7em',\n    },\n};\n\nconst QuickFilter = translate(\n    withStyles(quickFilterStyles)(({ classes, label, translate }) => (\n        <Chip className={classes.root} label={translate(label)} />\n    ))\n);\n\nexport const ProductFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput\n            source=\"category_id\"\n            reference=\"categories\"\n            sort={{ field: 'id', order: 'ASC' }}\n        >\n            <SelectInput source=\"name\" />\n        </ReferenceInput>\n        <NumberInput source=\"width_gte\" />\n        <NumberInput source=\"width_lte\" />\n        <NumberInput source=\"height_gte\" />\n        <NumberInput source=\"height_lte\" />\n        <QuickFilter\n            label=\"resources.products.fields.stock_lte\"\n            source=\"stock_lte\"\n            defaultValue={10}\n        />\n    </Filter>\n);\n\nconst ProductList = props => (\n    <List\n        {...props}\n        filters={<ProductFilter />}\n        perPage={20}\n        sort={{ field: 'id', order: 'ASC' }}\n    >\n        <GridList />\n    </List>\n);\n\nexport default ProductList;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n    root: { display: 'inline-block', marginTop: '1em', zIndex: 2 },\n    content: { padding: 0, '&:last-child': { padding: 0 } },\n    img: {\n        width: 'initial',\n        minWidth: 'initial',\n        maxWidth: '42em',\n        maxHeight: '15em',\n    },\n};\n\nconst Poster = withStyles(styles)(({ classes, record }) => (\n    <Card className={classes.root}>\n        <CardContent className={classes.content}>\n            <img src={record.image} alt=\"\" className={classes.img} />\n        </CardContent>\n    </Card>\n));\n\nexport default Poster;\n","import React from 'react';\nimport {\n    Create,\n    FormTab,\n    NumberInput,\n    ReferenceInput,\n    SelectInput,\n    TabbedForm,\n    TextInput,\n    required,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport RichTextInput from 'ra-input-rich-text';\n\nexport const styles = {\n    stock: { width: '5em' },\n    price: { width: '5em' },\n    width: { width: '5em' },\n    widthFormGroup: { display: 'inline-block' },\n    height: { width: '5em' },\n    heightFormGroup: { display: 'inline-block', marginLeft: 32 },\n};\n\nconst ProductCreate = ({ classes, ...props }) => (\n    <Create {...props}>\n        <TabbedForm>\n            <FormTab label=\"resources.products.tabs.image\">\n                <TextInput\n                    autoFocus\n                    source=\"image\"\n                    options={{ fullWidth: true }}\n                    validate={required()}\n                />\n                <TextInput\n                    source=\"thumbnail\"\n                    options={{ fullWidth: true }}\n                    validate={required()}\n                />\n            </FormTab>\n            <FormTab label=\"resources.products.tabs.details\" path=\"details\">\n                <TextInput source=\"reference\" validate={required()} />\n                <NumberInput\n                    source=\"price\"\n                    validate={required()}\n                    className={classes.price}\n                />\n                <NumberInput\n                    source=\"width\"\n                    validate={required()}\n                    className={classes.width}\n                    formClassName={classes.widthFormGroup}\n                />\n                <NumberInput\n                    source=\"height\"\n                    validate={required()}\n                    className={classes.height}\n                    formClassName={classes.heightFormGroup}\n                />\n                <ReferenceInput\n                    source=\"category_id\"\n                    reference=\"categories\"\n                    allowEmpty\n                >\n                    <SelectInput source=\"name\" />\n                </ReferenceInput>\n                <NumberInput\n                    source=\"stock\"\n                    validate={required()}\n                    className={classes.stock}\n                />\n            </FormTab>\n            <FormTab\n                label=\"resources.products.tabs.description\"\n                path=\"description\"\n            >\n                <RichTextInput source=\"description\" addLabel={false} />\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default withStyles(styles)(ProductCreate);\n","import React from 'react';\nimport {\n    Datagrid,\n    DateField,\n    Edit,\n    EditButton,\n    FormTab,\n    NumberInput,\n    Pagination,\n    ReferenceInput,\n    ReferenceManyField,\n    SelectInput,\n    TabbedForm,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport RichTextInput from 'ra-input-rich-text';\n\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\nimport Poster from './Poster';\nimport { styles as createStyles } from './ProductCreate';\n\nconst ProductTitle = ({ record }) => <span>Poster #{record.reference}</span>;\n\nconst styles = {\n    ...createStyles,\n    comment: {\n        maxWidth: '20em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst ProductEdit = ({ classes, ...props }) => (\n    <Edit {...props} title={<ProductTitle />}>\n        <TabbedForm>\n            <FormTab label=\"resources.products.tabs.image\">\n                <Poster />\n                <TextInput source=\"image\" options={{ fullWidth: true }} />\n                <TextInput source=\"thumbnail\" options={{ fullWidth: true }} />\n            </FormTab>\n            <FormTab label=\"resources.products.tabs.details\" path=\"details\">\n                <TextInput source=\"reference\" />\n                <NumberInput source=\"price\" className={classes.price} />\n                <NumberInput\n                    source=\"width\"\n                    className={classes.width}\n                    formClassName={classes.widthFormGroup}\n                />\n                <NumberInput\n                    source=\"height\"\n                    className={classes.height}\n                    formClassName={classes.heightFormGroup}\n                />\n                <ReferenceInput source=\"category_id\" reference=\"categories\">\n                    <SelectInput source=\"name\" />\n                </ReferenceInput>\n                <NumberInput source=\"stock\" className={classes.stock} />\n            </FormTab>\n            <FormTab\n                label=\"resources.products.tabs.description\"\n                path=\"description\"\n            >\n                <RichTextInput source=\"description\" addLabel={false} />\n            </FormTab>\n            <FormTab label=\"resources.products.tabs.reviews\" path=\"reviews\">\n                <ReferenceManyField\n                    reference=\"reviews\"\n                    target=\"product_id\"\n                    addLabel={false}\n                    pagination={<Pagination />}\n                >\n                    <Datagrid>\n                        <DateField source=\"date\" />\n                        <CustomerReferenceField />\n                        <StarRatingField />\n                        <TextField\n                            source=\"comment\"\n                            cellClassName={classes.comment}\n                        />\n                        <TextField source=\"status\" />\n                        <EditButton />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport default withStyles(styles)(ProductEdit);\n","import ProductIcon from '@material-ui/icons/Collections';\nimport ProductList from './ProductList';\nimport ProductEdit from './ProductEdit';\nimport ProductCreate from './ProductCreate';\n\nexport default {\n    list: ProductList,\n    create: ProductCreate,\n    edit: ProductEdit,\n    icon: ProductIcon,\n};\n","import React from 'react';\n\nconst AddressField = ({ record }) => (\n    <span>\n        {record.address}, {record.city} {record.zipcode}\n    </span>\n);\n\nexport default AddressField;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { ShowController, ReferenceField, TextField } from 'react-admin';\n\nimport Basket from '../orders/Basket';\n\nconst CustomerField = ({ record }) => (\n    <Typography>\n        {record.first_name} {record.last_name}\n        <br />\n        {record.address}\n        <br />\n        {record.city}, {record.zipcode}\n    </Typography>\n);\n\nconst InvoiceShow = props => (\n    <ShowController {...props} title=\" \">\n        {({ record }) =>\n            record && (\n                <Card style={{ width: 600, margin: 'auto' }}>\n                    <CardContent>\n                        <Grid container spacing={16}>\n                            <Grid item xs={6}>\n                                <Typography variant=\"title\" gutterBottom>\n                                    Posters Galore\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography\n                                    variant=\"title\"\n                                    gutterBottom\n                                    align=\"right\"\n                                >\n                                    Invoice {record.id}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={16}>\n                            <Grid item xs={12} align=\"right\">\n                                <ReferenceField\n                                    resource=\"invoices\"\n                                    reference=\"customers\"\n                                    source=\"customer_id\"\n                                    basePath=\"/invoices\"\n                                    record={record}\n                                    linkType={false}\n                                >\n                                    <CustomerField />\n                                </ReferenceField>\n                            </Grid>\n                        </Grid>\n                        <div style={{ height: 20 }}>&nbsp;</div>\n                        <Grid container spacing={16}>\n                            <Grid item xs={6}>\n                                <Typography\n                                    variant=\"title\"\n                                    gutterBottom\n                                    align=\"center\"\n                                >\n                                    Date{' '}\n                                </Typography>\n                                <Typography gutterBottom align=\"center\">\n                                    {new Date(record.date).toLocaleDateString()}\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={5}>\n                                <Typography\n                                    variant=\"title\"\n                                    gutterBottom\n                                    align=\"center\"\n                                >\n                                    Order\n                                </Typography>\n                                <Typography gutterBottom align=\"center\">\n                                    <ReferenceField\n                                        resource=\"invoices\"\n                                        reference=\"commands\"\n                                        source=\"command_id\"\n                                        basePath=\"/invoices\"\n                                        record={record}\n                                        linkType={false}\n                                    >\n                                        <TextField source=\"reference\" />\n                                    </ReferenceField>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <div style={{ margin: '10px 0' }}>\n                            <ReferenceField\n                                resource=\"invoices\"\n                                reference=\"commands\"\n                                source=\"command_id\"\n                                basePath=\"/invoices\"\n                                record={record}\n                                linkType={false}\n                            >\n                                <Basket />\n                            </ReferenceField>\n                        </div>\n                    </CardContent>\n                </Card>\n            )\n        }\n    </ShowController>\n);\n\nexport default InvoiceShow;\n","import React from 'react';\nimport {\n    List,\n    Datagrid,\n    TextField,\n    DateField,\n    ReferenceField,\n    NumberField,\n    Filter,\n    DateInput,\n} from 'react-admin';\n\nimport FullNameField from '../visitors/FullNameField';\nimport AddressField from '../visitors/AddressField';\nimport InvoiceShow from './InvoiceShow';\n\nconst ListFilters = props => (\n    <Filter {...props}>\n        <DateInput source=\"date_gte\" alwaysOn />\n        <DateInput source=\"date_lte\" alwaysOn />\n    </Filter>\n);\n\nconst InvoiceList = props => (\n    <List {...props} filters={<ListFilters />} perPage={25}>\n        <Datagrid rowClick=\"expand\" expand={<InvoiceShow />}>\n            <TextField source=\"id\" />\n            <DateField source=\"date\" />\n            <ReferenceField source=\"customer_id\" reference=\"customers\">\n                <FullNameField />\n            </ReferenceField>\n            <ReferenceField\n                source=\"customer_id\"\n                reference=\"customers\"\n                linkType={false}\n                label=\"resources.invoices.fields.address\"\n            >\n                <AddressField />\n            </ReferenceField>\n            <ReferenceField source=\"command_id\" reference=\"commands\">\n                <TextField source=\"reference\" />\n            </ReferenceField>\n            <NumberField source=\"total_ex_taxes\" />\n            <NumberField source=\"delivery_fees\" />\n            <NumberField source=\"taxes\" />\n            <NumberField source=\"total\" />\n        </Datagrid>\n    </List>\n);\n\nexport default InvoiceList;\n","import InvoiceIcon from '@material-ui/icons/LibraryBooks';\n\nimport InvoiceList from './InvoiceList';\n\nexport default {\n    list: InvoiceList,\n    icon: InvoiceIcon,\n};\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\nimport { stringify } from 'query-string';\n\nimport products from '../products';\n\nconst styles = {\n    icon: { paddingRight: '0.5em' },\n    link: {\n        display: 'inline-flex',\n        alignItems: 'center',\n    },\n};\n\nconst LinkToRelatedProducts = ({ classes, record, translate }) => (\n    <Button\n        size=\"small\"\n        color=\"primary\"\n        component={Link}\n        to={{\n            pathname: '/products',\n            search: stringify({\n                page: 1,\n                perPage: 25,\n                sort: 'id',\n                order: 'DESC',\n                filter: JSON.stringify({ category_id: record.id }),\n            }),\n        }}\n        className={classes.link}\n    >\n        <products.icon className={classes.icon} />\n        {translate('resources.categories.fields.products')}\n    </Button>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\nexport default enhance(LinkToRelatedProducts);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProductRefField = ({ record }) => (\n    <Link to={`products/${record.id}`}>{record.reference}</Link>\n);\n\nProductRefField.defaultProps = {\n    source: 'id',\n    label: 'Reference',\n};\n\nexport default ProductRefField;\n","import React from 'react';\nimport { Datagrid, EditButton, List, TextField } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport LinkToRelatedProducts from './LinkToRelatedProducts';\n\nconst styles = {\n    name: { padding: '0 12px 0 25px' },\n};\n\nconst CategoryList = ({ classes, ...props }) => (\n    <List {...props} sort={{ field: 'name', order: 'ASC' }}>\n        <Datagrid>\n            <TextField source=\"name\" className={classes.name} />\n            <LinkToRelatedProducts />\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport default withStyles(styles)(CategoryList);\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n    root: { width: 25, maxWidth: 25, maxHeight: 25 },\n};\n\nconst ThumbnailField = withStyles(styles)(({ classes, record }) => (\n    <img src={record.thumbnail} className={classes.root} alt=\"\" />\n));\n\nexport default ThumbnailField;\n","import React from 'react';\nimport {\n    translate,\n    Datagrid,\n    Edit,\n    EditButton,\n    NumberField,\n    ReferenceManyField,\n    SimpleForm,\n    TextInput,\n} from 'react-admin';\n\nimport ThumbnailField from '../products/ThumbnailField';\nimport ProductRefField from '../products/ProductRefField';\n\nconst CategoryTitle = translate(({ record, translate }) => (\n    <span>\n        {translate('resources.categories.name', { smart_count: 1 })} &quot;\n        {record.name}&quot;\n    </span>\n));\n\nconst CategoryEdit = props => (\n    <Edit title={<CategoryTitle />} {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" />\n            <ReferenceManyField\n                reference=\"products\"\n                target=\"category_id\"\n                label=\"resources.categories.fields.products\"\n                perPage={5}\n            >\n                <Datagrid>\n                    <ThumbnailField />\n                    <ProductRefField source=\"reference\" />\n                    <NumberField\n                        source=\"price\"\n                        options={{ style: 'currency', currency: 'USD' }}\n                    />\n                    <NumberField\n                        source=\"width\"\n                        options={{ minimumFractionDigits: 2 }}\n                    />\n                    <NumberField\n                        source=\"height\"\n                        options={{ minimumFractionDigits: 2 }}\n                    />\n                    <NumberField source=\"stock\" />\n                    <EditButton />\n                </Datagrid>\n            </ReferenceManyField>\n        </SimpleForm>\n    </Edit>\n);\n\nexport default CategoryEdit;\n","import React from 'react';\nimport {\n    Create,\n    // DateInput,\n    FormTab,\n    // LongTextInput,\n    TabbedForm,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nexport const styles = {\n    first_name: { display: 'inline-block' },\n    last_name: { display: 'inline-block', marginLeft: 32 },\n    email: { width: 544 },\n    address: { maxWidth: 544 },\n    zipcode: { display: 'inline-block' },\n    city: { display: 'inline-block', marginLeft: 32 },\n    comment: {\n        maxWidth: '20em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst CategoryCreate = ({ classes, ...props }) => (\n    <Create {...props}>\n        <TabbedForm>\n            <FormTab label=\"resources.customers.tabs.identity\">\n                <TextInput\n                    \n                    source=\"name\"\n                    formClassName={classes.first_name}\n                />\n            </FormTab>\n            \n        </TabbedForm>\n    </Create>\n);\n\nexport default withStyles(styles)(CategoryCreate);\n","\n\nimport CategoryList from './CategoryList';\nimport CategoryEdit from './CategoryEdit';\nimport CategoryCreate from './CategoryCreate';\n\nimport React, { Component } from 'react';\nimport {\n    List,\n    EditButton,\n    DeleteButton,\n    SaveButton,\n    TextInput,\n    TextField\n} from 'react-admin';\nimport { IgnoreFormProps, NodeView, Tree, NodeForm, NodeActions } from 'ra-tree-ui-materialui';\n\nconst CategoriesActions = props => (\n    <NodeActions {...props}>\n        <SaveButton />\n        <IgnoreFormProps> {/* This is important to not get warnings about unknown props with those buttons */}\n            <EditButton />\n            <DeleteButton />\n        </IgnoreFormProps>\n    </NodeActions>\n)\n\n\n const CategoriesList = (props) => (\n    <List {...props} perPage={10000}>\n        <Tree>\n            <NodeView actions={<CategoriesActions />}>\n                <TextField source=\"name\" />\n            </NodeView>\n        </Tree>\n    </List>\n);\nexport default {\n    list: CategoriesList,\n    // edit: CategoryEdit,\n    // icon: CategoryIcon,\n    create: CategoryCreate\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport { Button, startUndoable, crudUpdateMany } from 'react-admin';\n\nclass BulkAcceptButton extends Component {\n    handleClick = () => {\n        const { basePath, startUndoable, resource, selectedIds } = this.props;\n        startUndoable(\n            crudUpdateMany(\n                resource,\n                selectedIds,\n                { status: 'accepted' },\n                basePath\n            )\n        );\n    };\n\n    render() {\n        return (\n            <Button\n                label=\"resources.reviews.action.accept\"\n                onClick={this.handleClick}\n            >\n                <ThumbUp />\n            </Button>\n        );\n    }\n}\n\nBulkAcceptButton.propTypes = {\n    resource: PropTypes.string.isRequired,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    startUndoable: PropTypes.func.isRequired,\n};\n\nexport default connect(\n    undefined,\n    { startUndoable }\n)(BulkAcceptButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport { Button, startUndoable, crudUpdateMany } from 'react-admin';\n\nclass BulkRejectButton extends Component {\n    handleClick = () => {\n        const { basePath, startUndoable, resource, selectedIds } = this.props;\n        startUndoable(\n            crudUpdateMany(\n                resource,\n                selectedIds,\n                { status: 'rejected' },\n                basePath\n            )\n        );\n    };\n\n    render() {\n        return (\n            <Button\n                label=\"resources.reviews.action.reject\"\n                onClick={this.handleClick}\n            >\n                <ThumbDown />\n            </Button>\n        );\n    }\n}\n\nBulkRejectButton.propTypes = {\n    resource: PropTypes.string.isRequired,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    startUndoable: PropTypes.func.isRequired,\n};\n\nexport default connect(\n    undefined,\n    { startUndoable }\n)(BulkRejectButton);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport {\n    linkToRecord,\n    ReferenceField,\n    FunctionField,\n    TextField,\n} from 'react-admin';\n\nimport AvatarField from '../visitors/AvatarField';\n\nconst styles = {\n    root: {\n        width: '100vw',\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n    inline: {\n        display: 'inline',\n    },\n};\n\nconst ReviewMobileList = ({\n    basePath,\n    classes = {},\n    className,\n    data,\n    ids,\n    isLoading,\n    total,\n}) =>\n    (isLoading || total > 0) && (\n        <List className={classes.root}>\n            {ids.map(id => (\n                <Link\n                    to={linkToRecord(basePath, id)}\n                    className={classes.link}\n                    key={id}\n                >\n                    <ListItem button>\n                        <ListItemAvatar>\n                            <ReferenceField\n                                record={data[id]}\n                                source=\"customer_id\"\n                                reference=\"customers\"\n                                basePath={basePath}\n                                linkType={false}\n                            >\n                                <AvatarField size={40} />\n                            </ReferenceField>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={\n                                <Fragment>\n                                    <ReferenceField\n                                        record={data[id]}\n                                        source=\"customer_id\"\n                                        reference=\"customers\"\n                                        basePath={basePath}\n                                        linkType={false}\n                                    >\n                                        <FunctionField\n                                            render={record =>\n                                                `${record.first_name} ${\n                                                    record.last_name\n                                                }`\n                                            }\n                                            variant=\"subheading\"\n                                            className={classes.inline}\n                                        />\n                                    </ReferenceField>{' '}\n                                    on{' '}\n                                    <ReferenceField\n                                        record={data[id]}\n                                        source=\"product_id\"\n                                        reference=\"products\"\n                                        basePath={basePath}\n                                        linkType={false}\n                                    >\n                                        <TextField\n                                            source=\"reference\"\n                                            variant=\"subheading\"\n                                            className={classes.inline}\n                                        />\n                                    </ReferenceField>\n                                </Fragment>\n                            }\n                            secondary={data[id].comment}\n                            secondaryTypographyProps={{ noWrap: true }}\n                        />\n                    </ListItem>\n                </Link>\n            ))}\n        </List>\n    );\n\nReviewMobileList.propTypes = {\n    basePath: PropTypes.string,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    data: PropTypes.object,\n    hasBulkActions: PropTypes.bool.isRequired,\n    ids: PropTypes.array,\n    leftAvatar: PropTypes.func,\n    leftIcon: PropTypes.func,\n    linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n        .isRequired,\n    onToggleItem: PropTypes.func,\n    primaryText: PropTypes.func,\n    rightAvatar: PropTypes.func,\n    rightIcon: PropTypes.func,\n    secondaryText: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    tertiaryText: PropTypes.func,\n};\n\nReviewMobileList.defaultProps = {\n    linkType: 'edit',\n    hasBulkActions: false,\n    selectedIds: [],\n};\n\nexport default withStyles(styles)(ReviewMobileList);\n","import green from '@material-ui/core/colors/green';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\nconst rowStyle = (record, index, defaultStyle = {}) => {\n    if (record.status === 'accepted')\n        return {\n            ...defaultStyle,\n            borderLeftColor: green[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    if (record.status === 'pending')\n        return {\n            ...defaultStyle,\n            borderLeftColor: orange[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    if (record.status === 'rejected')\n        return {\n            ...defaultStyle,\n            borderLeftColor: red[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    return defaultStyle;\n};\n\nexport default rowStyle;\n","import React from 'react';\nimport { Datagrid, DateField, TextField } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\n\nimport rowStyle from './rowStyle';\n\nconst listStyles = {\n    headerRow: {\n        borderLeftColor: 'white',\n        borderLeftWidth: 5,\n        borderLeftStyle: 'solid',\n    },\n    comment: {\n        maxWidth: '18em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst ReviewListDesktop = ({ classes, ...props }) => (\n    <Datagrid\n        rowClick=\"edit\"\n        rowStyle={rowStyle}\n        classes={{ headerRow: classes.headerRow }}\n        {...props}\n    >\n        <DateField source=\"date\" />\n        <CustomerReferenceField linkType={false} />\n        <ProductReferenceField linkType={false} />\n        <StarRatingField />\n        <TextField source=\"comment\" cellClassName={classes.comment} />\n        <TextField source=\"status\" />\n    </Datagrid>\n);\n\nexport default withStyles(listStyles)(ReviewListDesktop);\n","import React from 'react';\nimport {\n    AutocompleteInput,\n    DateInput,\n    Filter,\n    ReferenceInput,\n    SearchInput,\n    SelectInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst filterStyles = {\n    status: { width: 150 },\n};\n\nconst ReviewFilter = ({ classes, ...props }) => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <SelectInput\n            source=\"status\"\n            choices={[\n                { id: 'accepted', name: 'Accepted' },\n                { id: 'pending', name: 'Pending' },\n                { id: 'rejected', name: 'Rejected' },\n            ]}\n            className={classes.status}\n        />\n        <ReferenceInput source=\"customer_id\" reference=\"customers\">\n            <AutocompleteInput\n                optionText={choice =>\n                    `${choice.first_name} ${choice.last_name}`\n                }\n            />\n        </ReferenceInput>\n        <ReferenceInput source=\"product_id\" reference=\"products\">\n            <AutocompleteInput optionText=\"reference\" />\n        </ReferenceInput>\n        <DateInput source=\"date_gte\" />\n        <DateInput source=\"date_lte\" />\n    </Filter>\n);\n\nexport default withStyles(filterStyles)(ReviewFilter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { formValueSelector } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport { translate, Mutation } from 'react-admin';\nimport compose from 'recompose/compose';\n\nconst sideEffects = {\n    onSuccess: {\n        notification: {\n            body: 'resources.reviews.notification.approved_success',\n            level: 'info',\n        },\n        redirectTo: '/reviews',\n    },\n    onFailure: {\n        notification: {\n            body: 'resources.reviews.notification.approved_error',\n            level: 'warning',\n        },\n    },\n};\n\n/**\n * This custom button demonstrate using <Mutation> to update data\n */\nconst AcceptButton = ({ record, translate }) =>\n    record && record.status === 'pending' ? (\n        <Mutation\n            type=\"UPDATE\"\n            resource=\"reviews\"\n            payload={{ id: record.id, data: { status: 'accepted' } }}\n            options={sideEffects}\n        >\n            {approve => (\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={approve}\n                >\n                    <ThumbUp\n                        color=\"primary\"\n                        style={{ paddingRight: '0.5em', color: 'green' }}\n                    />\n                    {translate('resources.reviews.action.accept')}\n                </Button>\n            )}\n        </Mutation>\n    ) : (\n        <span />\n    );\n\nAcceptButton.propTypes = {\n    record: PropTypes.object,\n    comment: PropTypes.string,\n    translate: PropTypes.func,\n};\n\nconst selector = formValueSelector('record-form');\n\nconst enhance = compose(\n    translate,\n    connect(state => ({\n        comment: selector(state, 'comment'),\n    }))\n);\n\nexport default enhance(AcceptButton);\n","import { UPDATE } from 'react-admin';\n\nexport const REVIEW_APPROVE = 'REVIEW_APPROVE';\nexport const REVIEW_APPROVE_LOADING = 'REVIEW_APPROVE_LOADING';\nexport const REVIEW_APPROVE_FAILURE = 'REVIEW_APPROVE_FAILURE';\nexport const REVIEW_APPROVE_SUCCESS = 'REVIEW_APPROVE_SUCCESS';\n\nexport const reviewApprove = (id, data, basePath) => ({\n    type: REVIEW_APPROVE,\n    payload: { id, data: { ...data, status: 'accepted' }, basePath },\n    meta: {\n        resource: 'reviews',\n        fetch: UPDATE,\n        onSuccess: {\n            notification: {\n                body: 'resources.reviews.notification.approved_success',\n                level: 'info',\n            },\n            redirectTo: '/reviews',\n            basePath,\n        },\n        onFailure: {\n            notification: {\n                body: 'resources.reviews.notification.approved_error',\n                level: 'warning',\n            },\n        },\n    },\n});\n\nexport const REVIEW_REJECT = 'REVIEW_REJECT';\nexport const REVIEW_REJECT_LOADING = 'REVIEW_REJECT_LOADING';\nexport const REVIEW_REJECT_FAILURE = 'REVIEW_REJECT_FAILURE';\nexport const REVIEW_REJECT_SUCCESS = 'REVIEW_REJECT_SUCCESS';\n\nexport const reviewReject = (id, data, basePath) => ({\n    type: REVIEW_REJECT,\n    payload: { id, data: { ...data, status: 'rejected' }, basePath },\n    meta: {\n        resource: 'reviews',\n        fetch: UPDATE,\n        onSuccess: {\n            notification: {\n                body: 'resources.reviews.notification.rejected_success',\n                level: 'info',\n            },\n            redirectTo: '/reviews',\n            basePath,\n        },\n        onFailure: {\n            notification: {\n                body: 'resources.reviews.notification.rejected_error',\n                level: 'warning',\n            },\n        },\n    },\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { formValueSelector } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport { translate } from 'react-admin';\nimport compose from 'recompose/compose';\nimport { reviewReject as reviewRejectAction } from './reviewActions';\n\n/**\n * This custom button demonstrate using a custom action to update data\n */\nclass RejectButton extends Component {\n    handleReject = () => {\n        const { reviewReject, record, comment } = this.props;\n        reviewReject(record.id, { ...record, comment });\n    };\n\n    render() {\n        const { record, translate } = this.props;\n        return record && record.status === 'pending' ? (\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={this.handleReject}\n            >\n                <ThumbDown\n                    color=\"primary\"\n                    style={{ paddingRight: '0.5em', color: 'red' }}\n                />\n                {translate('resources.reviews.action.reject')}\n            </Button>\n        ) : (\n            <span />\n        );\n    }\n}\n\nRejectButton.propTypes = {\n    comment: PropTypes.string,\n    record: PropTypes.object,\n    reviewReject: PropTypes.func,\n    translate: PropTypes.func,\n};\n\nconst selector = formValueSelector('record-form');\n\nconst enhance = compose(\n    translate,\n    connect(\n        state => ({\n            comment: selector(state, 'comment'),\n        }),\n        {\n            reviewReject: reviewRejectAction,\n        }\n    )\n);\n\nexport default enhance(RejectButton);\n","import React, { Fragment } from 'react';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { SaveButton, DeleteButton } from 'react-admin';\nimport AcceptButton from './AcceptButton';\nimport RejectButton from './RejectButton';\n\nconst styles = {\n    root: {\n        backgroundColor: 'white',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n};\n\nconst ReviewEditToolbar = ({\n    basePath,\n    classes,\n    handleSubmitWithRedirect,\n    invalid,\n    record,\n    resource,\n    saving,\n}) => (\n    <MuiToolbar className={classes.root}>\n        {record.status === 'pending' ? (\n            <Fragment>\n                <AcceptButton record={record} />\n                <RejectButton record={record} />\n            </Fragment>\n        ) : (\n            <Fragment>\n                <SaveButton\n                    handleSubmitWithRedirect={handleSubmitWithRedirect}\n                    invalid={invalid}\n                    saving={saving}\n                    redirect=\"list\"\n                    submitOnEnter={true}\n                />\n                <DeleteButton\n                    basePath={basePath}\n                    record={record}\n                    resource={resource}\n                />\n            </Fragment>\n        )}\n    </MuiToolbar>\n);\n\nexport default withStyles(styles)(ReviewEditToolbar);\n","import React from 'react';\nimport {\n    EditController,\n    LongTextInput,\n    SimpleForm,\n    DateField,\n} from 'react-admin';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\nimport ReviewEditToolbar from './ReviewEditToolbar';\n\nconst editStyle = theme => ({\n    root: {\n        paddingTop: 40,\n    },\n    title: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        margin: '1em',\n    },\n    form: {\n        [theme.breakpoints.up('xs')]: {\n            width: 400,\n        },\n        [theme.breakpoints.down('xs')]: {\n            width: '100vw',\n            marginTop: -30,\n        },\n    },\n    inlineField: {\n        display: 'inline-block',\n        width: '50%',\n    },\n});\n\nconst ReviewEdit = ({ classes, onCancel, ...props }) => (\n    <EditController {...props}>\n        {controllerProps =>\n            controllerProps.record ? (\n                <div className={classes.root}>\n                    <div className={classes.title}>\n                        <Typography variant=\"title\">\n                            {controllerProps.translate(\n                                'resources.reviews.detail'\n                            )}\n                        </Typography>\n                        <IconButton onClick={onCancel}>\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                    <SimpleForm\n                        className={classes.form}\n                        basePath={controllerProps.basePath}\n                        record={controllerProps.record}\n                        save={controllerProps.save}\n                        version={controllerProps.version}\n                        redirect=\"list\"\n                        resource=\"reviews\"\n                        toolbar={<ReviewEditToolbar />}\n                    >\n                        <CustomerReferenceField\n                            formClassName={classes.inlineField}\n                        />\n\n                        <ProductReferenceField\n                            formClassName={classes.inlineField}\n                        />\n                        <DateField\n                            source=\"date\"\n                            formClassName={classes.inlineField}\n                        />\n                        <StarRatingField formClassName={classes.inlineField} />\n                        <LongTextInput source=\"comment\" rowsMax={15} />\n                    </SimpleForm>\n                </div>\n            ) : null\n        }\n    </EditController>\n);\n\nexport default withStyles(editStyle)(ReviewEdit);\n","import React, { Fragment, Component } from 'react';\nimport compose from 'recompose/compose';\nimport classnames from 'classnames';\nimport { BulkDeleteButton, List, Responsive } from 'react-admin';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux';\nimport { Route } from 'react-router';\nimport Drawer from '@material-ui/core/Drawer';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport BulkAcceptButton from './BulkAcceptButton';\nimport BulkRejectButton from './BulkRejectButton';\nimport ReviewListMobile from './ReviewListMobile';\nimport ReviewListDesktop from './ReviewListDesktop';\nimport ReviewFilter from './ReviewFilter';\nimport ReviewEdit from './ReviewEdit';\n\nconst ReviewsBulkActionButtons = props => (\n    <Fragment>\n        <BulkAcceptButton {...props} />\n        <BulkRejectButton {...props} />\n        <BulkDeleteButton {...props} />\n    </Fragment>\n);\n\nconst styles = theme =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        list: {\n            flexGrow: 1,\n            transition: theme.transitions.create(['all'], {\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginRight: 0,\n        },\n        listWithDrawer: {\n            marginRight: 400,\n        },\n    });\n\nclass ReviewList extends Component {\n    render() {\n        const { classes, ...props } = this.props;\n        return (\n            <div className={classes.root}>\n                <Route path=\"/reviews/:id\">\n                    {({ match }) => {\n                        const isMatch = !!(\n                            match &&\n                            match.params &&\n                            match.params.id !== 'create'\n                        );\n\n                        return (\n                            <Fragment>\n                                <List\n                                    {...props}\n                                    className={classnames(classes.list, {\n                                        [classes.listWithDrawer]: isMatch,\n                                    })}\n                                    bulkActionButtons={\n                                        <ReviewsBulkActionButtons />\n                                    }\n                                    filters={<ReviewFilter />}\n                                    perPage={25}\n                                    sort={{ field: 'date', order: 'DESC' }}\n                                >\n                                    <Responsive\n                                        xsmall={<ReviewListMobile />}\n                                        medium={<ReviewListDesktop />}\n                                    />\n                                </List>\n                                <Drawer\n                                    variant=\"persistent\"\n                                    open={isMatch}\n                                    anchor=\"right\"\n                                    onClose={this.handleClose}\n                                    classes={{\n                                        paper: classes.drawerPaper,\n                                    }}\n                                >\n                                    {/* To avoid any errors if the route does not match, we don't render at all the component in this case */}\n                                    {isMatch ? (\n                                        <ReviewEdit\n                                            id={match.params.id}\n                                            onCancel={this.handleClose}\n                                            {...props}\n                                        />\n                                    ) : null}\n                                </Drawer>\n                            </Fragment>\n                        );\n                    }}\n                </Route>\n            </div>\n        );\n    }\n\n    handleClose = () => {\n        this.props.push('/reviews');\n    };\n}\n\nexport default compose(\n    connect(\n        undefined,\n        { push }\n    ),\n    withStyles(styles)\n)(ReviewList);\n","import ReviewIcon from '@material-ui/icons/Comment';\nimport ReviewList from './ReviewList';\n\nexport default {\n    icon: ReviewIcon,\n    list: ReviewList,\n};\n","import React from 'react';\nimport {\n    Create,\n    DateInput,\n    FormTab,\n    LongTextInput,\n    TabbedForm,\n    TextInput,\n} from 'react-admin';\nimport RichTextInput from 'ra-input-rich-text';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nexport const styles = {\n    name: { display: 'inline-block' },\n    \n};\n\nconst ServerCreate = ({ classes, ...props }) => (\n    <Create {...props}>\n        <TabbedForm>\n            <FormTab label=\"Server\">\n                <TextInput\n                    source=\"name\"\n                />\n                \n                <RichTextInput source=\"description\" addLabel={false} />\n                <TextInput\n                    source=\"ip\"\n                    // formClassName={classes.ip}\n                />\n                <DateInput source=\"birthday\" />\n            </FormTab>\n\n            <FormTab label=\"Services\" path=\"address\">\n            </FormTab>\n\n            <FormTab label=\"Services\" path=\"address\">\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default withStyles(styles)(ServerCreate);\n","import PersonIcon from '@material-ui/icons/People';\n// import ServerList from './ServerList';\nimport ServerCreate from './ServerCreate';\nimport { ListGuesser, ShowGuesser, EditGuesser } from 'react-admin';\n\nexport default {\n    create:ServerCreate,\n    list: ListGuesser,\n    show: ShowGuesser,\n    edit: EditGuesser,\n    icon: PersonIcon,\n};\n","import { withStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport {\n  Datagrid,\n  List,\n  Responsive,\n  ShowButton,\n  SimpleList,\n  TextField\n} from 'react-admin';\n\nconst styles = theme => ({\n  title: {\n    maxWidth: '20em',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  }\n});\n\nconst PostList = withStyles(styles)(({ classes, ...props }) => (\n  <List {...props} sort={{ field: 'published_at', order: 'DESC' }}>\n    <Responsive\n      small={\n        <SimpleList linkType=\"show\" primaryText={record => record.title} />\n      }\n      medium={\n        <Datagrid>\n          <TextField source=\"id\" />\n          <TextField source=\"title\" cellClassName={classes.title} />\n          <ShowButton />\n        </Datagrid>\n      }\n    />\n  </List>\n));\n\nexport default PostList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from 'react-admin';\n\nconst styles = {\n  button: {\n    marginTop: '1em'\n  }\n};\n\nconst AddCommentButton = ({ classes, record }) => (\n  <Button\n    className={classes.button}\n    variant=\"raised\"\n    component={Link}\n    to={`/comments/create?post_id=${record.id}`}\n    label=\"Add a comment\"\n    title=\"Add a comment\"\n  >\n    <ChatBubbleIcon />\n  </Button>\n);\n\nexport default withStyles(styles)(AddCommentButton);\n","import React from 'react';\nimport {\n  Datagrid,\n  DateField,\n  EditButton,\n  ShowButton,\n  ReferenceManyField,\n  RichTextField,\n  Show,\n  Tab,\n  TabbedShowLayout,\n  TextField\n} from 'react-admin';\nimport AddCommentButton from './AddCommentButton';\n\nconst PostShow = props => (\n  <Show {...props}>\n    <TabbedShowLayout>\n      <Tab label=\"Summary\">\n        <TextField source=\"id\" />\n        <TextField source=\"title\" />\n        <TextField source=\"teaser\" />\n      </Tab>\n      <Tab label=\"Body\" path=\"body\">\n        <RichTextField\n          source=\"body\"\n          stripTags={false}\n          label=\"\"\n          addLabel={false}\n        />\n      </Tab>\n      <Tab label=\"Comments\" path=\"comments\">\n        <ReferenceManyField\n          addLabel={false}\n          reference=\"comments\"\n          target=\"post_id\"\n          sort={{ field: 'created_at', order: 'DESC' }}\n        >\n          <Datagrid>\n            <DateField source=\"created_at\" />\n            <TextField source=\"body\" />\n            <ShowButton />\n            <EditButton />\n          </Datagrid>\n        </ReferenceManyField>\n        <AddCommentButton />\n      </Tab>\n    </TabbedShowLayout>\n  </Show>\n);\n\nexport default PostShow;\n","import RichTextInput from 'ra-input-rich-text';\nimport React from 'react';\nimport {\n    BooleanInput,\n    Create,\n    DateInput,\n    FormDataConsumer,\n    LongTextInput,\n    NumberInput,\n    SaveButton,\n    SimpleForm,\n    TextInput,\n    Toolbar,\n} from 'react-admin'; // eslint-disable-line import/no-unresolved\n\nconst PostCreateToolbar = props => (\n    <Toolbar {...props}>\n        <SaveButton\n            label=\"post.action.save_and_show\"\n            redirect=\"show\"\n            submitOnEnter={true}\n        />\n        <SaveButton\n            label=\"post.action.save_and_add\"\n            redirect={false}\n            submitOnEnter={false}\n            variant=\"flat\"\n        />\n    </Toolbar>\n);\n\nconst getDefaultDate = () => new Date();\n\nconst PostCreate = props => (\n    <Create {...props}>\n        <SimpleForm\n            toolbar={<PostCreateToolbar />}\n            defaultValue={{ average_note: 0 }}\n            validate={values => {\n                const errors = {};\n                ['title', 'teaser'].forEach(field => {\n                    if (!values[field]) {\n                        errors[field] = ['Required field'];\n                    }\n                });\n\n                if (values.average_note < 0 || values.average_note > 5) {\n                    errors.average_note = ['Should be between 0 and 5'];\n                }\n\n                return errors;\n            }}\n        >\n            <TextInput source=\"title\" />\n            <LongTextInput source=\"teaser\" />\n            <RichTextInput source=\"body\" />\n            <FormDataConsumer>\n                {({ formData, ...rest }) =>\n                    formData.title && (\n                        <NumberInput source=\"average_note\" {...rest} />\n                    )}\n            </FormDataConsumer>\n            <DateInput source=\"published_at\" defaultValue={getDefaultDate} />\n            <BooleanInput source=\"commentable\" defaultValue />\n        </SimpleForm>\n    </Create>\n);\n\nexport default PostCreate;","import BookIcon from '@material-ui/icons/Book';\nimport PostList from './PostList';\nimport PostShow from './PostShow';\nimport PostCreate from './PostCreate';\n\nexport default {\n  list: PostList,\n  show: PostShow,\n  icon: BookIcon,\n  create: PostCreate\n};\n","\nimport people from './people';\nimport visitors from './visitors';\nimport orders from './orders';\nimport products from './products';\nimport invoices from './invoices';\nimport categories from './categories';\nimport reviews from './reviews';\nimport servers from './servers';\nimport posts from './posts';\n\n// import users from './resources/users';\n\n// import comments from './resources/comments';\n\nexport default {\npeople,\nvisitors,\norders,\nproducts,\ninvoices,\ncategories,\nreviews,\nservers,\nposts\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { translate, changeLocale, Title } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport compose from 'recompose/compose';\nimport { changeTheme } from './actions';\n\nconst styles = {\n    label: { width: '10em', display: 'inline-block' },\n    button: { margin: '1em' },\n};\n\nconst Configuration = ({\n    classes,\n    theme,\n    locale,\n    changeTheme,\n    changeLocale,\n    translate,\n}) => (\n    <Card>\n        <Title title={translate('pos.configuration')} />\n        <CardContent>\n            <div className={classes.label}>{translate('pos.theme.name')}</div>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={theme === 'light' ? 'primary' : 'default'}\n                onClick={() => changeTheme('light')}\n            >\n                {translate('pos.theme.light')}\n            </Button>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={theme === 'dark' ? 'primary' : 'default'}\n                onClick={() => changeTheme('dark')}\n            >\n                {translate('pos.theme.dark')}\n            </Button>\n        </CardContent>\n        <CardContent>\n            <div className={classes.label}>{translate('pos.language')}</div>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={locale === 'en' ? 'primary' : 'default'}\n                onClick={() => changeLocale('en')}\n            >\n                en\n            </Button>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={locale === 'fr' ? 'primary' : 'default'}\n                onClick={() => changeLocale('fr')}\n            >\n                fr\n            </Button>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={locale === 'pt' ? 'primary' : 'default'}\n                onClick={() => changeLocale('pt')}\n            >\n            pt\n            </Button>\n        </CardContent>\n    </Card>\n);\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    locale: state.i18n.locale,\n});\n\nconst enhance = compose(\n    connect(\n        mapStateToProps,\n        {\n            changeLocale,\n            changeTheme,\n        }\n    ),\n    translate,\n    withStyles(styles)\n);\n\nexport default enhance(Configuration);\n","export const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = theme => ({\n    type: CHANGE_THEME,\n    payload: theme,\n});\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\nimport { stringify } from 'query-string';\n\nimport visitors from '../visitors';\n\nconst styles = {\n    icon: { paddingRight: '0.5em' },\n    link: {\n        display: 'inline-flex',\n        alignItems: 'center',\n    },\n};\n\nconst LinkToRelatedCustomers = ({ classes, segment, translate }) => (\n    <Button\n        size=\"small\"\n        color=\"primary\"\n        component={Link}\n        to={{\n            pathname: '/customers',\n            search: stringify({\n                page: 1,\n                perPage: 25,\n                filter: JSON.stringify({ groups: segment }),\n            }),\n        }}\n        className={classes.link}\n    >\n        <visitors.icon className={classes.icon} />\n        {translate('resources.segments.fields.customers')}\n    </Button>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\nexport default enhance(LinkToRelatedCustomers);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { translate, Title } from 'react-admin';\n\nimport LinkToRelatedCustomers from './LinkToRelatedCustomers';\nimport segments from './data';\n\nconst Segments = ({ translate }) => (\n    <Card>\n        <Title title={translate('resources.segments.name')} />\n        <Table>\n            <TableHead>\n                <TableRow>\n                    <TableCell>\n                        {translate('resources.segments.fields.name')}\n                    </TableCell>\n                    <TableCell />\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {segments.map(segment => (\n                    <TableRow key={segment.id}>\n                        <TableCell>{translate(segment.name)}</TableCell>\n                        <TableCell>\n                            <LinkToRelatedCustomers segment={segment.id} />\n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    </Card>\n);\n\nexport default translate(Segments);\n","export default [\n    {ip:'0.0.0.0', host:'localhost'},\n    {ip:'0.0.0.0', host:'localhost'},\n    {ip:'0.0.0.0', host:'localhost'},\n    {ip:'0.0.0.0', host:'localhost'},\n    {ip:'0.0.0.0', host:'localhost'},\n    {ip:'0.0.0.0', host:'localhost'},\n];\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { translate, Title } from 'react-admin';\nimport hosts from './data';\n\nconst HostsEditor = ({ translate }) => (\n    <Card>\n        <Title title={translate('resources.hosts.name')} />\n        <Table>\n            <TableHead>\n                <TableRow>\n                    <TableCell>\n                        {translate('resources.hosts.fields.name')}\n                    </TableCell>\n                    <TableCell />\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {hosts.map(host => (\n                    <TableRow key={host.ip}>\n                        <TableCell>{translate(host.ip)}</TableCell>\n                        <TableCell>{translate(host.host)}\n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    </Card>\n);\n\nexport default translate(HostsEditor);\n","\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, FormHelperText, GridList, OutlinedInput, Button, LinearProgress, Icon } from '@material-ui/core';\nimport CSVToArray from './CSVToArray';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport ReactDataGrid from 'react-data-grid';\nimport WebmGogs from './ezgif.com-gif-to-webm.webm'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n      },    \n\n      input: {\n        display: 'flex',\n        padding: 0,\n      },\n      valueContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flex: 1,\n        alignItems: 'center',\n        overflow: 'hidden',\n      },\n      chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n      },\n      chipFocused: {\n        backgroundColor: emphasize(\n          theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n          0.08,\n        ),\n      },\n      noOptionsMessage: {\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n      },\n      singleValue: {\n        fontSize: 16,\n      },\n      placeholder: {\n        position: 'absolute',\n        left: 2,\n        fontSize: 16,\n      },\n      paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing.unit,\n        left: 0,\n        right: 0,\n      },\n      divider: {\n        height: theme.spacing.unit * 2,\n      },\n      modalPaper: {\n        position: 'absolute',\n        width: theme.spacing.unit * 50,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n      },      \n    appBar: {\n        position: 'relative',\n    }, \n    gridTile: {\n        // height:'400px'\n    },\n    gridRoot: {\n        // height:'400px',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflowX: 'scroll',\n        backgroundColor: theme.palette.background.paper,\n      },\n    gridList: {\n\n        // overflowX: 'scroll',\n        // height:'400px',\n    //   flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)',\n    },\n    layout: {\n        width: 'auto',\n        //   marginLeft: theme.spacing.unit * 2,\n        //   marginRight: theme.spacing.unit * 2,\n        //   [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n        //     width: 600,\n        //     marginLeft: 'auto',\n        //     marginRight: 'auto',\n        //   },\n    },\n    paper: {\n        height:'400px',\n        //   marginTop: theme.spacing.unit * 3,\n        //   marginBottom: theme.spacing.unit * 3,\n        padding: theme.spacing.unit * 2,\n        [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n            // marginTop: theme.spacing.unit * 6,\n            marginBottom: theme.spacing.unit * 6,\n            padding: theme.spacing.unit * 3,\n        },\n    },\n    stepper: {\n        padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n    },\n\n\n    button: {\n        margin: theme.spacing.unit,\n      },\n      inputH: {\n        display: 'none',\n      },   \n      \n      \n      cardMedia:{\n        position:'relative',\n        opacity:0.5,\n        height: 140,\n      },\n      cardMediaBlocker:{\n\n        backgroundColor:'black', \n        position:'absolute', \n        width:'100%', \n        height:'100%',\n        top:'0px',\n        left:'0px',\n        opacity:'1'\n      }\n});\nclass CSVImporterCard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageResults:[],\n            smartTextareaModal:false,\n            started:false,\n            value:0,\n            json:[],\n            materialTableColumns:[],\n            fields:[],\n            tableName:null,\n            progressOne:0,\n            progressTwo:0,\n            progress:0,\n            activeStep:0,\n            csvImporterCardStep:0,\n            csvImporterCardMaxSteps:10,\n            nlpInput:''\n        };\n\n        this.chooseFile = this.chooseFile.bind(this);\n\n        this.processContent = this.processContent.bind(this);\n        // this.importData = this.importData.bind(this);\n        // this.openPasteModal = this.openPasteModal.bind(this);\n        // this.closePasteModal = this.closePasteModal.bind(this);\n        // this.fetchUrl = this.fetchUrl.bind(this);\n        // this.checkData = this.checkData.bind(this);\n    }\n\n    processContent(content)\n    {\n        const result = CSVToArray(content);\n        \n\n        let header = result[0].map(i => {\n            return {\"title\":i, \"field\":i};\n        });\n        let reactGridHeaders = result[0].map(i => {\n            return {\"key\":i, \"name\":i, \"editable\":true};\n        });\n        const headers = result[0];\n        const jsonResult = [];\n        \n        let total = result.length\n\n        let p = Promise.resolve();\n        \n        p = p.then(() => {\n            this.rawData = [];\n            this.lastProgress = 0;\n        });\n\n        // check for huge data\n        result.forEach((row, i) => {\n            p = p.then(() => {\n                this.resolveRow(row, i);  \n                var progress = parseInt(((this.rawData.length/total)*100));\n                if(progress % 2 == 0 && progress !== this.lastProgress){\n                    this.lastProgress = progress;\n                    this.setState({\n                        progressTwo:progress\n                    });  \n                }     \n            }).then(() => {\n                // return new Promise((resolve, reject) => {\n                //     setTimeout(resolve,10)\n                // }); \n            });\n        });\n\n        p = p.then(() => {\n            // console.log(jsonResult);\n            console.log(['first then', this.rawData.length]);\n        }).then(() => {\n\n            // return p;\n        }).then(() => {\n\n            // alert(\"map end\");\n        });\n\n        p = p.then(() => {\n\n            this.props.onSuccess({\n                locked:false,\n                progressOne:0,\n                progressTwo:0,\n                total:this.rawData.length,\n                progress:0,\n                fields:headers,\n                materialTableColumns:header,\n                reactGridHeaders:reactGridHeaders,\n                json:this.rawData,\n                started:true,\n                csvImporterCardStep:3,\n                playCogs:false\n            });\n            \n            this.setState({\n                locked:false,\n                progressOne:0,\n                progressTwo:0,\n                total:this.rawData.length,\n                progress:0,\n                fields:headers,\n                materialTableColumns:header,\n                    reactGridHeaders:reactGridHeaders,\n                json:this.rawData,\n                started:true,\n                csvImporterCardStep:3,\n                playCogs:false\n            });\n\n            document.getElementById(\"video\").pause();\n        });\n        \n\n    }\n\n\n    resolveRow(row, i)\n    {\n        var output = {};\n        var insertid = false;\n        if(i === 0){\n            if(!row.includes('id'))\n            {\n                this.insertid = true;\n                row.unshift('id');   \n            }\n            this.rawHeaders = row;\n        } else {\n            if(this.insertid == true)\n            {\n                row.unshift(i);\n            }\n            \n            for(var x=0;x<row.length;x++){\n                if(this.rawHeaders[x]){\n                    output[this.rawHeaders[x]] = row[x];\n                }\n            }\n            this.rawData.push(output);\n        }\n        \n    }\n    setProgress(progress)\n    {\n        // this.progressBarElement.value = progress;\n\n        this.setState({\n            progress:progress\n        })\n        // if(progress % 10 === 0){\n        // }\n        // console.log(['progress', progress]);\n        // this.setState({progress:progress});\n    }\n    handleNext = () => {\n        this.setState(prevState => ({\n            csvImporterCardStep: prevState.activeStep + 1,\n        }));\n      };\n    \n      handleBack = () => {\n        this.setState(prevState => ({\n            csvImporterCardStep: prevState.csvImporterCardStep - 1,\n        }));\n      };    \n    chooseFile(event)\n    {\n\n        // document.getElementById(\"video\").play();\n        var fileReader = new FileReader();\n\n\n        this.setState({\n            locked:true,\n            progress:0,\n            csvImporterCardStep:1,\n            playCogs:true\n        })\n\n        fileReader.onprogress = (data) => {\n            if (data.lengthComputable) {    \n                this.setProgress(parseInt( ((data.loaded / data.total) * 100), 10 ));                                                        \n                // this.setState({\n                //     progressOne:parseInt( ((data.loaded / data.total) * 100), 10 )\n                // })\n            }\n        }        \n        fileReader.onloadend = (event) => {\n            const content = fileReader.result;\n\n            this.setState({\n                locked:true,\n                size:content.length,\n                progressTwo:0,\n                progress:100,\n                csvImporterCardStep:2\n            })\n            \n            this.processContent(content);\n        }\n\n        fileReader.readAsText(event.target.files[0]);\n    }\n    render(){\n\n        const { classes, theme, } = this.props;\n        const { started, fields, json, materialTableColumns , value, locked,\n            progressOne, reactGridHeaders,\n            progressTwo, progress, activeStep, smartTextareaModal,\n            csvImporterCardStep, csvImporterCardMaxSteps,  playCogs, imageSrc, imageResults,nlpInput\n        } = this.state;\n        return ( <Card>\n            <CardHeader>CSV Parser</CardHeader>\n            <CardMedia\n            className={classes.cardMedia}\n            title=\"Upload Processor\"\n            image={\"https://cdn130.picsart.com/241489756028212.png\"}\n            backgroundColor=\"blue\"\n            >\n    \n    \n                <video id=\"video\" controls={false} autoPlay={playCogs} loop={true} style={{ width:'100%', height:'100%'}}>\n                    <source src={WebmGogs} type=\"video/webm\" />\n                </video>\n                <div style={{ backgroundColor:'black', position:'relative' }}></div>\n            </CardMedia>\n    \n            <CardContent align=\"center\">\n    \n                {csvImporterCardStep === 0 && <div key={0}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Create data by CSV\n                    </Typography>\n                    <Typography component=\"p\">\n                        Send CSV file to start.\n                    </Typography>\n    \n    \n    \n                    <input\n                    // accept=\".csv\"\n                    className={classes.inputH}\n                    id=\"outlined-button-file\"\n                    multiple\n                    type=\"file\"\n                    onChange={this.chooseFile}\n                />\n                <label htmlFor=\"outlined-button-file\">\n                    <Button variant=\"outlined\" component=\"span\" className={classes.button}>\n                    Upload CSV\n                    </Button>\n                </label> \n    \n                </div>}\n                \n    \n                {csvImporterCardStep === 1 && <div key={1}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Reading your file...\n                    </Typography>\n                    <LinearProgress  \n                        variant=\"determinate\"  \n                        ref={elem => this.progressBarElement = elem} \n                        value={progress}/>\n                        {progress}%\n                </div>}\n                \n    \n                {csvImporterCardStep === 2 && <div key={2}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Checking data\n                    </Typography>\n                    <LinearProgress \n                    color=\"secondary\" \n                    variant=\"determinate\" \n                    ref={elem => this.progressBarTwo = elem} \n                    value={progressTwo}/>\n                    {progressTwo}%\n                </div>}\n    \n    \n                {csvImporterCardStep === 3 && <div key={3}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        Done!\n                    </Typography>\n    \n                    <Typography component=\"p\">Filesize:</Typography>\n                    <Typography component=\"p\">Columns:{fields.length}</Typography>\n                    <Typography component=\"p\">Rows:{json.length}</Typography>\n\n\n      {/* <ReactDataGrid\n        columns={reactGridHeaders}\n        rowGetter={i =>  json[i]}\n        rowsCount={json.length}\n        \n      /> */}\n\n\n<Paper className={classes.paper}>\n    <h3>IndexedDB </h3>\n    <pre style={{ \n        wordWrap:'break-word',\n        whiteSpace:'pre-line',\n    }}>\n\n    db.version(2).stores({'{\\n\\t'}\n    tableName:\"++id{fields.map(i => `,${i}`)}\",\n    {'\\n}'});        \n            \n    </pre>\n    </Paper>\n                </div>}                            \n    \n                          </CardContent>\n            <CardActions>  \n            {csvImporterCardStep >= 1 && <MobileStepper\n                variant=\"progress\"\n                steps={2}\n                position=\"static\"\n                activeStep={csvImporterCardStep}\n                className={classes.root}\n                nextButton={\n                    <Button size=\"small\" \n                    \n                        disabled={true}>\n                      Next\n                      {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                    </Button>\n                }\n                backButton={\n                <Button size=\"small\" \n                disabled={true}>\n                    {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                    Back\n                </Button>\n                }\n            />}\n            \n    \n            </CardActions>\n        </Card>);        \n    }\n}\n\n\n\n\n\nCSVImporterCard.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n// export default ;\n\nexport default withStyles(styles, { withTheme: true })(CSVImporterCard);\n","export default function CSVToArray( strData, strDelimiter ){\n        // Check to see if the delimiter is defined. If not,\n        // then default to comma.\n        strDelimiter = (strDelimiter || \",\");\n\n        // Create a regular expression to parse the CSV values.\n        var objPattern = new RegExp(\n            (\n                // Delimiters.\n                \"(\\\\\" + strDelimiter + \"|\\\\r?\\\\n|\\\\r|^)\" +\n\n                // Quoted fields.\n                \"(?:\\\"([^\\\"]*(?:\\\"\\\"[^\\\"]*)*)\\\"|\" +\n\n                // Standard fields.\n                \"([^\\\"\\\\\" + strDelimiter + \"\\\\r\\\\n]*))\"\n            ),\n            \"gi\"\n            );\n\n\n        // Create an array to hold our data. Give the array\n        // a default empty first row.\n        var arrData = [[]];\n\n        // Create an array to hold our individual pattern\n        // matching groups.\n        var arrMatches = null;\n\n\n        // Keep looping over the regular expression matches\n        // until we can no longer find a match.\n        while (arrMatches = objPattern.exec( strData )){\n\n            // Get the delimiter that was found.\n            var strMatchedDelimiter = arrMatches[ 1 ];\n\n            // Check to see if the given delimiter has a length\n            // (is not the start of string) and if it matches\n            // field delimiter. If id does not, then we know\n            // that this delimiter is a row delimiter.\n            if (\n                strMatchedDelimiter.length &&\n                strMatchedDelimiter !== strDelimiter\n                ){\n\n                // Since we have reached a new row of data,\n                // add an empty row to our data array.\n                arrData.push( [] );\n\n            }\n\n            var strMatchedValue;\n\n            // Now that we have our delimiter out of the way,\n            // let's check to see which kind of value we\n            // captured (quoted or unquoted).\n            if (arrMatches[ 2 ]){\n\n                // We found a quoted value. When we capture\n                // this value, unescape any double quotes.\n                strMatchedValue = arrMatches[ 2 ].replace(\n                    new RegExp( \"\\\"\\\"\", \"g\" ),\n                    \"\\\"\"\n                    );\n\n            } else {\n\n                // We found a non-quoted value.\n                strMatchedValue = arrMatches[ 3 ];\n\n            }\n\n\n            // Now that we have our value string, let's add\n            // it to the data array.\n            arrData[ arrData.length - 1 ].push( strMatchedValue );\n        }\n\n        // Return the parsed data.\n        return( arrData );\n    }    ","\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { Paper, Fab,  Typography, FormHelperText, GridList, OutlinedInput, Button, LinearProgress, Icon } from '@material-ui/core';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport CSVToArray from './CSVToArray';\nimport Select from 'react-select';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n// import JSONEditorDemo from '../components/Editor/JSONEditor';\n// import SmartTextarea from '../components/SmartTextarea';\n// import DragSample from '../components/DragSample';\nimport Chip from '@material-ui/core/Chip';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { emphasize } from '@material-ui/core/styles/colorManipulator';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Draggable from 'react-draggable';\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\n// import InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\n// import SignPad from '../components/SignPad'\n\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport SwipeableViews from 'react-swipeable-views';\nimport { autoPlay } from 'react-swipeable-views-utils';\n\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Dexie from 'dexie';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Modal from '@material-ui/core/Modal';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport InputIcon from '@material-ui/icons/Input';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport HelpIcon from '@material-ui/icons/Help';\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport MapIcon from '@material-ui/icons/Map';\n// import Typography from '@material-ui/core/Typography';\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CSVImporterCard from './CSVImporterCard';\nimport { Grid, TextField, FormControl, MenuItem, GridListTile, InputLabel } from '@material-ui/core';\n\nimport Table from '@material-ui/core/Table';\nimport StepLabel from '@material-ui/core/StepLabel'; \nimport Step from '@material-ui/core/Step'; \nimport Stepper from '@material-ui/core/Stepper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n// import alasql from 'alasql';\n// import MaterialTable from 'material-table';\n// import Proxies from '../app/tables/Proxies'\n\n// import HTML5Backend from 'react-dnd-html5-backend'\n// import { DragDropContextProvider } from 'react-dnd'\n\n// import SortableContainer  from '../components/Sortable/Container';\n// import IconPicker from '../components/IconPicker';\n\nimport WebmGogs from './ezgif.com-gif-to-webm.webm'\n// import logosvg from '../logo.svg'\n// import EventSvg from '../event.svg'\n\n\nimport ReactDataGrid from 'react-data-grid';\nimport ScrollableTabsButtonForce from './ScrollableTabsButtonForce';\n\n\n\n\n\nconst db = new Dexie('APP');\n\n\nrequire('tracking');\nrequire('tracking/build/data/face-min.js');\nrequire('tracking/build/data/eye-min.js');\nrequire('tracking/build/data/mouth-min.js');\n\nconst tracking = window.tracking;\n\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\n\n\nconst steps = ['Objetivo', 'Payment details', 'Review your order'];\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-force-tabpanel-${index}`}\n      aria-labelledby={`scrollable-force-tab-${index}`}\n      {...other}\n    >\n      {/* <Box p={3}>{children}</Box> */}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-force-tab-${index}`,\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\n  };\n}\nconst suggestions = [\n    { label: 'Afghanistan' },\n    { label: 'Aland Islands' },\n    { label: 'Albania' },\n    { label: 'Algeria' },\n    { label: 'American Samoa' },\n    { label: 'Andorra' },\n    { label: 'Angola' },\n    { label: 'Anguilla' },\n    { label: 'Antarctica' },\n    { label: 'Antigua and Barbuda' },\n    { label: 'Argentina' },\n    { label: 'Armenia' },\n    { label: 'Aruba' },\n    { label: 'Australia' },\n    { label: 'Austria' },\n    { label: 'Azerbaijan' },\n    { label: 'Bahamas' },\n    { label: 'Bahrain' },\n    { label: 'Bangladesh' },\n    { label: 'Barbados' },\n    { label: 'Belarus' },\n    { label: 'Belgium' },\n    { label: 'Belize' },\n    { label: 'Benin' },\n    { label: 'Bermuda' },\n    { label: 'Bhutan' },\n    { label: 'Bolivia, Plurinational State of' },\n    { label: 'Bonaire, Sint Eustatius and Saba' },\n    { label: 'Bosnia and Herzegovina' },\n    { label: 'Botswana' },\n    { label: 'Bouvet Island' },\n    { label: 'Brazil' },\n    { label: 'British Indian Ocean Territory' },\n    { label: 'Brunei Darussalam' },\n  ];\n  \nconst dataOptions = [\n'bigIncrements',\n'bigInteger',\n'binary',\n'boolean',\n'char',\n'date',\n'dateTime',\n'dateTimeTz',\n'decimal',\n'double',\n'enum',\n'float',\n'geometry',\n'geometryCollection',\n'increments',\n'integer',\n'ipAddress',\n'json',\n'jsonb',\n'lineString',\n'longText',\n'macAddress',\n'mediumIncrements',\n'mediumInteger',\n'mediumText',\n'morphs',\n'multiLineString',\n'multiPoint',\n'multiPolygon',\n'nullableMorphs',\n'nullableTimestamps',\n'point',\n'polygon',\n'rememberToken',\n'smallIncrements',\n'smallInteger',\n'softDeletes',\n'softDeletesTz',\n'string',\n'text',\n'time',\n'timeTz',\n'timestamp',\n'timestampTz',\n'timestamps',\n'timestampsTz',\n'tinyIncrements',\n'tinyInteger',\n'unsignedBigInteger',\n'unsignedDecimal',\n'unsignedInteger',\n'unsignedMediumInteger',\n'unsignedSmallInteger',\n'unsignedTinyInteger',\n'uuid',\n'year'\n];\n\n    const columns = [\n  { key: \"id\", name: \"ID\", editable: true },\n  { key: \"title\", name: \"Title\", editable: true },\n  { key: \"complete\", name: \"Complete\", editable: true }\n];\n\nconst rows = [\n  { id: 0, title: \"Task 1\", complete: 20 },\n  { id: 1, title: \"Task 2\", complete: 40 },\n  { id: 2, title: \"Task 3\", complete: 60 }\n];\n\nfunction TabContainer(props) {\n    return (\n      <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n        {props.children}\n      </Typography>\n    );\n  }\n  \n  TabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n\n\n\n  const uuidv4 = function() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n  }\n\n\n  function rand() {\n    return Math.round(Math.random() * 20) - 10;\n  }\nfunction getModalStyle() {\n    const top = 50;// + rand();\n    const left = 50;// + rand();\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n  \nconst styles = theme => ({\n    root: {\n      // flexGrow: 1,\n      // width: '100%',\n      },    \n\n      input: {\n        display: 'flex',\n        padding: 10,\n        fontSize:30\n      },\n      iconButton: {\n        padding: 10,\n      },\n      divider: {\n        width: 1,\n        height: 28,\n        margin: 4,\n      },\n      valueContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flex: 1,\n        alignItems: 'center',\n        overflow: 'hidden',\n      },\n      chip: {\n        margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`,\n      },\n      chipFocused: {\n        backgroundColor: emphasize(\n          theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n          0.08,\n        ),\n      },\n      noOptionsMessage: {\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n      },\n      singleValue: {\n        fontSize: 16,\n      },\n      placeholder: {\n        position: 'absolute',\n        left: 2,\n        fontSize: 16,\n      },\n      paper: {\n        // position: 'absolute',\n        // zIndex: 1,\n        // marginTop: theme.spacing.unit,\n        // left: 0,\n        // right: 0,\n      },\n      divider: {\n        height: theme.spacing.unit * 2,\n      },\n      modalPaper: {\n        // position: 'absolute',\n        // width: theme.spacing.unit * 50,\n        // backgroundColor: theme.palette.background.paper,\n        // boxShadow: theme.shadows[5],\n        // padding: theme.spacing.unit * 4,\n        // outline: 'none',\n      },      \n    appBar: {\n        position: 'relative',\n    }, \n    gridTile: {\n        // height:'400px'\n    },\n    gridRoot: {\n        // height:'400px',\n        // display: 'flex',\n        // flexWrap: 'wrap',\n        // justifyContent: 'space-around',\n        // overflowX: 'scroll',\n        // backgroundColor: theme.palette.background.paper,\n      },\n    gridList: {\n\n        // overflowX: 'scroll',\n        // height:'400px',\n    //   flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)',\n    },\n    layout: {\n        width: 'auto',\n        //   marginLeft: theme.spacing.unit * 2,\n        //   marginRight: theme.spacing.unit * 2,\n        //   [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n        //     width: 600,\n        //     marginLeft: 'auto',\n        //     marginRight: 'auto',\n        //   },\n    },\n    paper: {\n        // height:'400px',\n        // //   marginTop: theme.spacing.unit * 3,\n        // //   marginBottom: theme.spacing.unit * 3,\n        // padding: theme.spacing.unit * 2,\n        // [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n        //     // marginTop: theme.spacing.unit * 6,\n        //     marginBottom: theme.spacing.unit * 6,\n        //     padding: theme.spacing.unit * 3,\n        // },\n    },\n    stepper: {\n        padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing.unit * 3,\n        marginLeft: theme.spacing.unit,\n    },\n\n\n    button: {\n        margin: theme.spacing.unit,\n      },\n      inputH: {\n        display: 'none',\n      },   \n      \n      \n      cardMedia:{\n        position:'relative',\n        opacity:0.5,\n        height: 140,\n      },\n      cardMediaBlocker:{\n\n        backgroundColor:'black', \n        position:'absolute', \n        width:'100%', \n        height:'100%',\n        top:'0px',\n        left:'0px',\n        opacity:'1'\n      }\n      ,\n\n\n      fab: {\n        position: 'fixed',\n        bottom: theme.spacing.unit * 2,\n        right: theme.spacing.unit * 2,\n\n        margin: theme.spacing.unit,\n      },\n      \n      extendedIcon: {\n        marginRight: theme.spacing.unit,\n      },      \n});\n\nconst components = {\n    Control,\n    Menu,\n    MultiValue,\n    NoOptionsMessage,\n    Option,\n    Placeholder,\n    SingleValue,\n    ValueContainer,\n  };\n\n  function Control(props) {\n    return (\n      <TextField\n        fullWidth\n        InputProps={{\n          inputComponent,\n          inputProps: {\n            className: props.selectProps.classes.input,\n            inputRef: props.innerRef,\n            children: props.children,\n            ...props.innerProps,\n          },\n        }}\n        {...props.selectProps.textFieldProps}\n      />\n    );\n  }\n    \n\n\nfunction Option(props) {\n    return (\n      <MenuItem\n        buttonRef={props.innerRef}\n        selected={props.isFocused}\n        component=\"div\"\n        style={{\n          fontWeight: props.isSelected ? 500 : 400,\n        }}\n        {...props.innerProps}\n      >\n        {props.children}\n      </MenuItem>\n    );\n  }\n  \n  function Placeholder(props) {\n    return (\n      <Typography\n        color=\"textSecondary\"\n        className={props.selectProps.classes.placeholder}\n        {...props.innerProps}\n      >\n        {props.children}\n      </Typography>\n    );\n  }\n  \n  function SingleValue(props) {\n    return (\n      <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n        {props.children}\n      </Typography>\n    );\n  }\n  \n  function ValueContainer(props) {\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n  }\n  \n  function MultiValue(props) {\n    return (\n      <Chip\n        tabIndex={-1}\n        label={props.children}\n        className={classNames(props.selectProps.classes.chip, {\n          [props.selectProps.classes.chipFocused]: props.isFocused,\n        })}\n        onDelete={props.removeProps.onClick}\n        deleteIcon={<CancelIcon {...props.removeProps} />}\n      />\n    );\n  }\n  \nfunction NoOptionsMessage(props) {\n    return (\n      <Typography\n        color=\"textSecondary\"\n        className={props.selectProps.classes.noOptionsMessage}\n        {...props.innerProps}\n      >\n        {props.children}\n      </Typography>\n    );\n  }\n  function inputComponent({ inputRef, ...props }) {\n    return <div ref={inputRef} {...props} />;\n  }\n    \n  function Menu(props) {\n    return (\n      <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n        {props.children}\n      </Paper>\n    );\n  }\nclass MainDashboard extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // console.log(['wat', JSON.parse(localStorage.getItem('menuItems'))]);\n        this.state = {\n            rows:rows,\n            dialogOpen:false,\n            imageResults:[],\n            smartTextareaModal:false,\n            started:false,\n            value:0,\n            json:[],\n            reactGridHeaders:[],\n            materialTableColumns:[],\n            fields:[],\n            tableName:null,\n            progressOne:0,\n            progressTwo:0,\n            progress:0,\n            activeStep:0,\n            csvImporterCardStep:0,\n            csvImporterCardMaxSteps:10,\n            nlpInput:''\n        };\n\n        this.rawData = [];\n        this.onChangeSmartTextarea = this.onChangeSmartTextarea.bind(this);\n\n        this.handleChangeTab = this.handleChangeTab.bind(this);\n        // this.chooseImage = this.chooseImage.bind(this);\n        \n        // this.processContent = this.processContent.bind(this);\n        this.importData = this.importData.bind(this);\n        this.alaSqlImport = this.alaSqlImport.bind(this);\n\n        \n        // this.openPasteModal = this.openPasteModal.bind(this);\n        // this.closePasteModal = this.closePasteModal.bind(this);\n        // this.fetchUrl = this.fetchUrl.bind(this);\n        this.checkData = this.checkData.bind(this);\n\n        // this.onDragOver = this.onDragOver.bind(this);\n        // this.handleNLP = this.handleNLP.bind(this);\n\n        this.getImportedData = this.getImportedData.bind(this);\n        this.openDialog = this.openDialog.bind(this);\n        this.handleCloseDialog = this.handleCloseDialog.bind(this);\n    }\n\n  onGridRowsUpdated = ({ fromRow, toRow, updated }) => {\n    // this.setState(state => {\n    //   const rows = state.rows.slice();\n    //   for (let i = fromRow; i <= toRow; i++) {\n    //     rows[i] = { ...rows[i], ...updated };\n    //   }\n    // });\n  };\n    openDialog()\n    {\n        this.setState({dialogOpen:true})\n    }\n\n    handleCloseDialog()\n    {\n\n        this.setState({dialogOpen:false})\n    }\n    getImportedData(data)\n    {\n        this.setState(data);\n    }\n    handleNLP(event)\n    {\n        this.setState({\n            nlpInput:event.target.value\n        });\n        // var doc = nlp('London is calling')        \n        // alert(doc.sentences().toNegative().out('text'));\n    }\n    onDragOver(event)\n    {\n        console.log([event])\n        event.preventDefault();\n    }\n    fetchUrl()\n    {\n        \n    }\n\n    alaSqlImport()\n    {\n\n    }\n    importData()\n    {\n        const {fields, json, version, tableName} = this.state;\n        // const version = db.version();\n        const schema = {}\n        schema[tableName] = \"++id,\" + fields.join().toString();\n        db.version(version+1).stores(schema);\n\n\n        db.table(tableName).bulkAdd(json).then(function(lastKey) {\n            console.log(\"Done adding 100,000 raindrops all over the place\");\n            console.log(\"Last raindrop's id was: \" + lastKey); // Will be 100000.\n            alert(\"Fecho\");\n        })   \n        // new Dexie(\"ReactSampleDB\").open().then((db) => {\n        //     this.setState({\n        //         version:db.verno,\n        //         columnstring:\"++id,\" + fields.join().toString(),\n        //         tableName:prompt('table')\n        //     });\n        //     // version = db.verno;\n        //     // var columnstring = \"++id,\" + fields.join().toString();\n        //     // var tableName = prompt('table');\n        //     // alert(\"Version\" + columnstring);\n        //     // console.log(['version', version, columnstring]);\n        //     // collectionName:\"++id{}\",\n        // })\n        console.log(version);\n    }\n    // function getType(str){\n    //     if (typeof str !== 'string') str = str.toString();\n    //     var nan = isNaN(Number(str));\n    //     var isfloat = /^\\d*(\\.|,)\\d*$/;\n    //     var commaFloat = /^(\\d{0,3}(,)?)+\\.\\d*$/;\n    //     var dotFloat = /^(\\d{0,3}(\\.)?)+,\\d*$/;\n    //     var date = /^\\d{0,4}(\\.|\\/)\\d{0,4}(\\.|\\/)\\d{0,4}$/;\n    //     var email = /^[A-za-z0-9._-]*@[A-za-z0-9_-]*\\.[A-Za-z0-9.]*$/;\n    //     var phone = /^\\+\\d{2}\\/\\d{4}\\/\\d{6}$/g;\n    //     if (!nan){\n    //         if (parseFloat(str) === parseInt(str)) return \"integer\";\n    //         else return \"float\";\n    //     }\n    //     else if (isfloat.test(str) || commaFloat.test(str) || dotFloat.test(str)) return \"float\";\n    //     else if (date.test(str)) return \"date\";\n    //     else {\n    //         if (email.test(str)) return \"e-mail\";\n    //         else if (phone.test(str)) return \"phone\";\n    //         else return \"string\";\n    //     }\n    // }\n\n    checkData()\n    {\n        document.getElementById(\"video\").play();\n        this.state.json.forEach((row, idx) => {\n            // console.log([idx, row]);\n        })\n        document.getElementById(\"video\").pause();\n        // this.setState({\n        //     playCogs:false\n        // })\n        \n        // this.setState({progressTwo:Math.round(((idx/this.state.json)*100))})\n    }\n\n    chooseImage(event)\n    {\n        // document.getElementById(\"video\").play();\n        var fileReader = new FileReader();\n\n        fileReader.onloadend = (event) => {\n            this.setState({\n                imageSrc:fileReader.result\n            });\n\n            setTimeout(() => {this.detectFace()}, 1000);\n            \n        }\n        fileReader.readAsDataURL(event.target.files[0]);\n        // event.target.forEach((file) => {\n        //     // fileReader.readAsDataURL(event.target.files[0]);\n        //     fileReader.readAsDataURL(file);\n        // })\n\n        \n        // this.setState({\n        //     locked:true,\n        //     progress:0,\n        //     csvImporterCardStep:1,\n        //     playCogs:true\n        // })\n\n        // fileReader.onprogress = (data) => {\n        //     if (data.lengthComputable) {    \n        //         this.setProgress(parseInt( ((data.loaded / data.total) * 100), 10 ));                                                        \n        //         // this.setState({\n        //         //     progressOne:parseInt( ((data.loaded / data.total) * 100), 10 )\n        //         // })\n        //     }\n        // }        \n        // fileReader.onloadend = (event) => {\n        //     // const content = fileReader.result;\n\n        //     // this.setState({\n        //     //     locked:true,\n        //     //     size:content.length,\n        //     //     progressTwo:0,\n        //     //     progress:100,\n        //     //     csvImporterCardStep:2\n        //     // })\n            \n        //     // this.processContent(content);\n        // }\n\n\n    }\n\n    detectFace = () => {\n        var img = document.getElementById('imageSrc');\n        var tracker = new tracking.ObjectTracker(['face']);\n        tracker.setStepSize(1.7);\n        tracking.track('#imageSrc', tracker);\n        // $(\".rect\").remove();\n        tracker.on('track', (event, etc) => {\n            alert('track started');\n            let dataUrls = []\n            event.data.forEach((rect) => {\n                // window.plot(rect.x, rect.y, rect.width, rect.height);\n                var times = img.naturalWidth / img.offsetWidth;\n                var canvas = document.createElement('canvas');\n                canvas.width = 300;\n                canvas.height = 300;\n                var ctx = canvas.getContext('2d');\n                // console.log([rect.x, rect.y, rect.width, rect.height]);\n                ctx.drawImage(img, rect.x*times, rect.y*times, rect.width*times, rect.height*times, 0, 0, 300, 300);\n                var dataUrl = canvas.toDataURL();\n                dataUrls.push(dataUrl);\n                // var $img = $(\"<img>\");\n                // $img.attr('src', dataUrl).width('100%');\n                   \n                // $img.on('load', getCollorPallete)\n                // $(\"#foco\").empty().append($img);\n\n                // saveAs(dataUrl, 'avatar-' + Date.now() + '.png')\n            });\n     \n            this.setState({\n                imageResults:dataUrls\n            });\n            \n        });\n    }    \n \n    handleChangeTab(event, value)\n    {\n        this.setState({ value });\n\n    }\n\n    componentDidMount() {\n\n        console.log(tracking);\n        // new Dexie(\"ReactSampleDB\").open().then((db) => {\n        //     this.setState({\n        //         version:db.verno,\n        //         tableName:'table_' + Date.now()\n        //     });\n        // })\n    }\n\n    componentDidUpdate(prevProps) {\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    parseMapData()\n    {\n\n    }\n    parseGraphData(){\n        const { json } = this.state;\n        const links = [];\n        const groups = {};\n        let nodes = json.slice(0,10).map((item) => {\n            // if(!groups[item.country_code]){\n            //     groups[item.country_code] = [];\n            // }\n\n            // groups[item.country_code].push(item.id)\n            return Object.assign(item, {\n\n            });\n        });\n\n        // Object.keys(groups).forEach((index, ids) => {\n\n        //     groups[index].forEach((uuidSource, idSource) => {\n        //         groups[index].forEach((uuidTarget, idTarget) => {\n\n        //             links.push({\n        //                 source:uuidSource,\n        //                 target:uuidTarget\n        //             });\n                                        \n        //         });                \n        //     });\n        //     // console.log([index, ids])\n        // })\n        // console.log(groups);\n        // json.forEach(function(i){\n            \n\n        // })\n        return {\n            nodes:nodes,\n            links:links\n        }\n    }\n\n    onChangeSmartTextarea(event)\n    {\n        this.processContent(event.target.value);\n    }\n\n    \n\n    renderIndexedbPaper(tableName, fields)\n    {\n        const { classes } = this.props;\n        return ( \n            <Paper className={classes.paper}>\n    <h3>IndexedDB </h3>\n    <pre style={{ \n        wordWrap:'break-word',\n        whiteSpace:'pre-line',\n    }}>\n\n    db.version(2).stores({'{\\n\\t'}\n    {tableName}:\"++id{fields.map(i => `,${i}`)}\",\n    {'\\n}'});        \n            \n    </pre>\n    </Paper>\n        )\n    \n    }\n\n    \n    renderPHPClassPaper(tableName, fields){\n        const { classes } = this.props;\n        return (\n            <Paper className={classes.paper}>\n            <h3>PHP </h3>\n            <pre style={{ \n                wordWrap:'break-word',\n                whiteSpace:'pre-line',\n            }}>\n\n            class {tableName} extends Model{'{\\n\\t'} \n            \n            {fields.map(i => `\\npublic ${i};`)}\n            {'\\n}'}        \n                    \n            </pre>\n            </Paper>\n        );        \n    }\n\n    renderReactSelect()\n    {\n\n        const selectStyles = {\n            input: base => ({\n              ...base,\n            //   color: theme.palette.text.primary,\n              '& input': {\n                font: 'inherit',\n              },\n            }),\n          };   \n          \n          return (<NoSsr>\n\n            {/* <Select\n                classes={classes}\n                styles={selectStyles}\n                textFieldProps={{\n                label: 'Label',\n                InputLabelProps: {\n                    shrink: true,\n                },\n                }}\n                options={suggestions}\n                components={components}\n                value={this.state.multi}\n                onChange={function(event){console.log(event);}}\n                placeholder=\"Select multiple countries\"\n                isMulti\n            /> */}\n            </NoSsr>);        \n    }\n    openPasteModal(event)\n    {\n        this.setState({smartTextareaModal:true});\n    }\n\n    closePasteModal(event)\n    {\n        this.setState({smartTextareaModal:false});\n    }\n    renderSqlPaper(tableName, fields){\n        const { classes } = this.props;\n        return (\n            <Paper className={classes.paper}>\n            <h3>SQL </h3>\n            <pre style={{ \n                wordWrap:'break-word',\n                whiteSpace:'pre-line',\n            }}>\n\n            CREATE TABLE {tableName} ({'\\n\\t'}\n            {fields.map(i => `,\\n'${i}' text null default ''`)}\n            {'\\n'});        \n                    \n            </pre>\n            </Paper>\n        );        \n    }\n\n    handlecsvImporterCardStepChange = csvImporterCardStep => {\n        this.setState({ csvImporterCardStep });\n      };\n    render() {\n        const { classes, theme, } = this.props;\n        const { dialogOpen, started, fields, json, materialTableColumns , reactGridHeaders, value, locked,\n            progressOne,\n            progressTwo, progress, activeStep, smartTextareaModal,\n            csvImporterCardStep, csvImporterCardMaxSteps,  playCogs, imageSrc, imageResults,nlpInput\n        } = this.state;\n        const graphData = {nodes:[], links:[]};\n  \n        const NLPTesterCard = (props) => {\n            return ( <Card>\n                <CardMedia\n                className={classes.cardMedia}\n                title=\"Paella dish\"\n                image={\"http://localhost/uploads/image/proxy/random.php\"}\n                backgroundColor=\"blue\"\n                >\n        \n        \n                    <video id=\"video\" controls={false} autoPlay={playCogs} loop={true} style={{ width:'100%', height:'100%'}}>\n                        <source src={WebmGogs} type=\"video/webm\" />\n                    </video>\n                    <div style={{ backgroundColor:'black', position:'relative' }}></div>\n                </CardMedia>\n                <CardHeader>CSV Parser</CardHeader>\n        \n                <CardContent align=\"center\">                \n                    <TextField label=\"Type to analise\" fullWidth\n                    value={nlpInput}\n                    onChange={this.handleNLP}/>\n                    {nlpInput}\n                </CardContent>\n                </Card>\n            );\n\n        }\n        \n    \n        \n\n        const WebCrawlerCard = (props) => {\n            return (\n                <Card>\n                    {/* <CardMedia\n                    className={classes.cardMedia}\n                    image={\"http://localhost/uploads/image/proxy/content4.coedcherry.com/met-art/127550/w_F2883E95F5B1FD24D99CB2043B937465.jpg\"}\n                    title=\"Paella dish\"\n                    />\n\n                    <CardContent>\n\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Create data by URL\n                        </Typography>\n                        <Typography component=\"p\">\n                            Set the starting URL to schedule a new scan\n                        </Typography>\n                    </CardContent>\n                    <CardActions>  \n                                           \n\n                    <Button onClick={this.fetchUrl} variant=\"outlined\" component=\"span\" className={classes.button}>\n                        Fetch URL\n                    </Button>\n                                                 \n                    </CardActions> */}\n                </Card>  );\n        }\n   \n        // const graphData = this.parseGraphData();\n        return (\n          <Card>\n            <AppBar position=\"static\" color=\"default\">\n              <Tabs\n                value={value}\n                onChange={this.handleChangeTab}\n                variant=\"scrollable\"\n                scrollable={true}\n                scrollButtons=\"on\"\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                aria-label=\"scrollable force tabs example\"\n              >\n                <Tab label=\"Item One\" icon={<PhoneIcon />} {...a11yProps(0)} />\n                <Tab label=\"Item Two\" icon={<FavoriteIcon />} {...a11yProps(1)} />\n                <Tab label=\"Item Three\" icon={<PersonPinIcon />} {...a11yProps(2)} />\n                <Tab label=\"Item Four\" icon={<HelpIcon />} {...a11yProps(3)} />\n                <Tab label=\"Item Five\" icon={<ShoppingBasket />} {...a11yProps(4)} />\n                <Tab label=\"Item Six\" icon={<ThumbDown />} {...a11yProps(5)} />\n                <Tab label=\"Item Seven\" icon={<ThumbUp />} {...a11yProps(6)} />\n              </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n              Item One\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n              Item Two\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n              Item Three\n            </TabPanel>\n            <TabPanel value={value} index={3}>\n              Item Four\n            </TabPanel>\n            <TabPanel value={value} index={4}>\n              Item Five\n            </TabPanel>\n            <TabPanel value={value} index={5}>\n              Item Six\n            </TabPanel>\n            <TabPanel value={value} index={6}>\n              Item Seven\n            </TabPanel>\n          </Card>\n      )\n    }\n}\n\n\nMainDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n};\n// export default ;\n\nexport default withStyles(styles, { withTheme: true })(MainDashboard);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Configuration from './configuration/Configuration';\nimport Segments from './resources/segments/Segments';\nimport HostsEditor from './components/tools/HostsEditor';\n// import CSVImporterCard from './components/tools/CSVImporterCard'\nimport MainDashboard from './components/tools/CSVImporterCard'\n// import ScrollableTabsButtonForce from './components/tools/ScrollableTabsButtonForce'\nexport default [\n    \n    <Route exact path=\"/csvimportercard\" component={MainDashboard} />,\n    \n    <Route exact path=\"/hosts\" component={HostsEditor} />,\n    \n    <Route exact path=\"/configuration\" component={Configuration} />,\n    <Route exact path=\"/segments\" component={Segments} />,\n];\n","import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_ERROR } from 'react-admin';\n\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username } = params;\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n    }\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    }\n    if (type === AUTH_ERROR) {\n        return Promise.resolve();\n    }\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('username')\n            ? Promise.resolve()\n            : Promise.reject();\n    }\n    return Promise.reject('Unkown method');\n};\n","import { all, takeEvery } from 'redux-saga/effects';\nimport { REVIEW_APPROVE_FAILURE, REVIEW_REJECT_FAILURE } from './reviewActions';\n\nexport default function* reviewSaga() {\n    yield all([\n        takeEvery(REVIEW_APPROVE_FAILURE, function*({ error }) {\n            console.error(error);\n            yield all([]);\n        }),\n        takeEvery(REVIEW_REJECT_FAILURE, function*({ error }) {\n            console.error(error);\n            yield all([]);\n        }),\n    ]);\n}\n","import reviewSaga from './resources/reviews/reviewSaga';\n\nexport default [reviewSaga];\n","import { CHANGE_THEME } from './configuration/actions';\n\nexport default (previousState = 'light', { type, payload }) => {\n    if (type === CHANGE_THEME) {\n        return payload;\n    }\n    return previousState;\n};\n","import React from 'react';\nimport { AppBar, UserMenu, MenuItemLink, translate } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { withStyles } from '@material-ui/core/styles';\n\n// import Logo from './Logo';\n\nconst styles = {\n    title: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    spacer: {\n        flex: 1,\n    },\n};\n\nconst CustomUserMenu = translate(({ translate, ...props }) => (\n    <UserMenu {...props}>\n        <MenuItemLink\n            to=\"/configuration\"\n            primaryText={translate('pos.configuration')}\n            leftIcon={<SettingsIcon />}\n        />\n    </UserMenu>\n));\n\nconst CustomAppBar = ({ classes, ...props }) => (\n    <AppBar {...props} userMenu={<CustomUserMenu />}>\n        <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            className={classes.title}\n            id=\"react-admin-title\"\n        />\n        {/* <Logo /> */}\n        <span className={classes.spacer} />\n    </AppBar>\n);\n\nexport default withStyles(styles)(CustomAppBar);\n","import React, { Fragment } from 'react';\nimport compose from 'recompose/compose';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Collapse from '@material-ui/core/Collapse';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { translate } from 'react-admin';\n\nconst styles = {\n    listItem: {\n        paddingLeft: '1rem',\n        color:\"white\"\n    },\n    listItemText: {\n        paddingLeft: 2,\n        fontSize: '1rem',\n        color:\"white\"\n    },\n    listItemIcon: {\n        color:'white'\n    },\n    sidebarIsOpen: {\n        paddingLeft: 25,\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n    },\n    sidebarIsClosed: {\n        paddingLeft: 0,\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n    },\n};\n\nconst SubMenu = ({\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    classes,\n    children,\n    translate,\n}) => (\n    <Fragment>\n        <ListItem\n            dense\n            button\n            onClick={handleToggle}\n            className={classes.listItem}\n        >\n            <ListItemIcon\n                className={classes.listItemIcon}>{isOpen ? <ExpandMore /> : icon}</ListItemIcon>\n            <ListItemText\n                inset\n                primary={isOpen ? translate(name) : ''}\n                secondary={isOpen ? '' : translate(name)}\n                className={classes.listItemText}\n            />\n        </ListItem>\n        <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n            <List\n                dense\n                component=\"div\"\n                disablePadding\n                className={\n                    sidebarIsOpen\n                        ? classes.sidebarIsOpen\n                        : classes.sidebarIsClosed\n                }\n            >\n                {children}\n            </List>\n            <Divider />\n        </Collapse>\n    </Fragment>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(SubMenu);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LabelIcon from '@material-ui/icons/Label';\nimport { withRouter } from 'react-router-dom';\nimport {\n    translate,\n    DashboardMenuItem,\n    MenuItemLink,\n    Responsive,\n} from 'react-admin';\n\nimport visitors from '../resources/visitors';\nimport orders from '../resources/orders';\nimport invoices from '../resources/invoices';\nimport products from '../resources/products';\nimport categories from '../resources/categories';\nimport reviews from '../resources/reviews';\nimport SubMenu from './SubMenu';\n\nimport BuildIcon from '@material-ui/icons/Build';\n\n\nclass Menu extends Component {\n    state = {\n        menuCatalog: false,\n        menuSales: false,\n        menuCustomers: false,\n        menuTools: false\n    };\n\n    static propTypes = {\n        onMenuClick: PropTypes.func,\n        logout: PropTypes.object,\n    };\n\n    handleToggle = menu => {\n        this.setState(state => ({ [menu]: !state[menu] }));\n    };\n\n    render() {\n        const { onMenuClick, open, logout, translate } = this.props;\n        return (\n            <div>\n                {' '}\n                <DashboardMenuItem onClick={onMenuClick} />\n                <MenuItemLink\n                    to={`/people`}\n                    primaryText={translate(`resources.people.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<visitors.icon />}\n                    onClick={onMenuClick}\n                />\n                <SubMenu\n                    handleToggle={() => this.handleToggle('menuTools')}\n                    isOpen={this.state.menuTools}\n                    sidebarIsOpen={open}\n                    name=\"Tools\"\n                    icon={<BuildIcon />}\n                >\n                <MenuItemLink\n                    to={`/csvimportercard`}\n                    primaryText={translate(`CSV Importer`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<visitors.icon />}\n                    onClick={onMenuClick}\n                />\n                <MenuItemLink\n                    to={`/hosts`}\n                    primaryText={translate(`resources.customers.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<visitors.icon />}\n                    onClick={onMenuClick}\n                />\n                    <MenuItemLink\n                        to={`/dotenv`}\n                        primaryText={translate(`resources.segments.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<LabelIcon />}\n                        onClick={onMenuClick}\n                    />\n                    <MenuItemLink\n                        to={`/themeeditor`}\n                        primaryText={translate(`Theme Editor`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<LabelIcon />}\n                        onClick={onMenuClick}\n                    />\n                </SubMenu>\n                <MenuItemLink\n                    to={`/servers`}\n                    primaryText={translate(`resources.servers.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<visitors.icon />}\n                    onClick={onMenuClick}\n                />\n                <MenuItemLink\n                    to={`/reviews`}\n                    primaryText={translate(`resources.reviews.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<reviews.icon />}\n                    onClick={onMenuClick}\n                />\n                <SubMenu\n                    handleToggle={() => this.handleToggle('menuSales')}\n                    isOpen={this.state.menuSales}\n                    sidebarIsOpen={open}\n                    name=\"pos.menu.sales\"\n                    icon={<orders.icon />}\n                >\n                    <MenuItemLink\n                        to={`/commands`}\n                        primaryText={translate(`resources.commands.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<orders.icon />}\n                        onClick={onMenuClick}\n                    />\n                    <MenuItemLink\n                        to={`/invoices`}\n                        primaryText={translate(`resources.invoices.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<invoices.icon />}\n                        onClick={onMenuClick}\n                    />\n                </SubMenu>\n                <SubMenu\n                    handleToggle={() => this.handleToggle('menuCatalog')}\n                    isOpen={this.state.menuCatalog}\n                    sidebarIsOpen={open}\n                    name=\"Catalog\"\n                    icon={<products.icon />}\n                >\n                    <MenuItemLink\n                        to={`/products`}\n                        primaryText={translate(`resources.products.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<products.icon />}\n                        onClick={onMenuClick}\n                    />\n                    {/* <MenuItemLink\n                        to={`/categories`}\n                        primaryText={translate(`resources.categories.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<categories.icon />}\n                        onClick={onMenuClick}\n                    /> */}\n                </SubMenu>\n                <SubMenu\n                    handleToggle={() => this.handleToggle('menuCustomer')}\n                    isOpen={this.state.menuCustomer}\n                    sidebarIsOpen={open}\n                    name=\"pos.menu.customers\"\n                    icon={<visitors.icon />}\n                >\n                    <MenuItemLink\n                        to={`/customers`}\n                        primaryText={translate(`resources.customers.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<visitors.icon />}\n                        onClick={onMenuClick}\n                    />\n                    <MenuItemLink\n                        to={`/segments`}\n                        primaryText={translate(`resources.segments.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<LabelIcon />}\n                        onClick={onMenuClick}\n                    />\n                </SubMenu>\n                <Responsive\n                    xsmall={\n                        <MenuItemLink\n                            to=\"/configuration\"\n                            primaryText={translate('pos.configuration')}\n                            leftIcon={<SettingsIcon />}\n                            onClick={onMenuClick}\n                        />\n                    }\n                    medium={null}\n                />\n                <Responsive\n                    small={logout}\n                    medium={null} // Pass null to render nothing on larger devices\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    open: state.admin.ui.sidebarOpen,\n    theme: state.theme,\n    locale: state.i18n.locale,\n});\n\nconst enhance = compose(\n    withRouter,\n    connect(\n        mapStateToProps,\n        {}\n    ),\n    translate\n);\n\nexport default enhance(Menu);\n","export const darkTheme = {\n    palette: {\n        type: 'dark', // Switching the dark mode on is a single property value change.\n    },\n};\n\nexport const lightTheme = {\n    palette: {\n        secondary: {\n            light: '#5f5fc4',\n            main: '#283593',\n            dark: '#001064',\n            contrastText: '#fff',\n        },\n    },\n};\n\nexport const newTheme = {\n    \"palette\": {\n        \"common\": {\n            \"black\": \"rgba(0, 0, 0, 1)\",\n            \"white\": \"#fff\"\n        },\n        \"background\": {\n            \"paper\": \"rgba(0,0,0,0.8)\",\n            \"default\": \"rgba(0, 0, 0, 1)\"\n        },\n        \"primary\": {\n            \"light\": \"rgba(1, 1, 111, 1)\",\n            \"main\": \"rgba(1, 1, 1, 1)\",\n            \"dark\": \"rgba(40, 40, 40, 1)\",\n            \"contrastText\": \"#fff\"\n        },\n        \"secondary\": {\n            \"light\": \"rgba(255, 4, 4, 1)\",\n            \"main\": \"rgba(0,0,0, 1)\",\n            \"dark\": \"rgba(40, 40, 40, 1)\",\n            \"contrastText\": \"rgba(250, 222, 222, 1)\"\n        },\n        \"error\": {\n            \"light\": \"#e57373\",\n            \"main\": \"rgba(235, 235, 235, 1)\",\n            \"dark\": \"rgba(11, 11, 230, 1)\",\n            \"contrastText\": \"#fff\"\n        },\n        \"text\": {\n            \"primary\": \"rgba(235, 235, 235, 1)\",\n            \"secondary\": \"rgba(255, 255, 255, 1)\",\n            \"disabled\": \"rgba(235, 235, 235, 1)\",\n            \"hint\": \"rgba(235, 235, 235, 1)\"\n        }\n    }\n}\n//@todo - facebookTheme, whatsappTheme, telegramTheme, gamehudZeroTheme\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, Sidebar } from 'react-admin';\nimport AppBar from './AppBar';\nimport Menu from './Menu';\nimport { darkTheme, lightTheme, newTheme } from './themes';\nimport { withStyles } from '@material-ui/core/styles';\nimport saturnJpg from './saturn.jpg'\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        zIndex: 1,\n        minHeight: '100vh',\n        backgroundColor: theme.palette.background.default,\n        position: 'relative',\n    },\n    appFrame: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflowX: 'auto',\n        minHeight: '100vh',\n    },\n    contentWithSidebar: {\n        display: 'flex',\n        flexGrow: 1,\n    },\n    content: {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 2,\n        padding:0,\n        width:'100%',\n        // padding: theme.spacing.unit * 3,\n        marginTop: '0em',\n        // paddingLeft: 5,\n        overflow:'auto',\n        // maxHeight: '85vh',\n        // marginTop:0\n    },\n});\nconst CustomSidebar = props => <Sidebar {...props} \nstyle={{\n    // backgroundColor:\"rgba(255,255,255,0.75)\"\n}} />;\nconst CustomLayout = props => (\n    <Layout {...props} \n    style={{\n        // backgroundImage:\"url(\" + saturnJpg + \")\",\n        height:\"100%\"\n    }}\n    appBar={AppBar} \n    sidebar={CustomSidebar} \n    menu={Menu} \n    />\n);\n\nexport default connect(\n    state => ({\n        theme: state.theme === 'dark' ? newTheme : lightTheme,\n    }),\n    {}\n)(withStyles(styles)(CustomLayout));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { propTypes, reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport {\n    MuiThemeProvider,\n    createMuiTheme,\n    withStyles,\n} from '@material-ui/core/styles';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport { Notification, translate, userLogin } from 'react-admin';\n\nimport { lightTheme } from './themes';\n\nconst styles = theme => ({\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        background: 'url(https://source.unsplash.com/random/1600x900)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    card: {\n        minWidth: 300,\n        marginTop: '6em',\n    },\n    avatar: {\n        margin: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hint: {\n        marginTop: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n        color: theme.palette.grey[500],\n    },\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n    },\n});\n\n// see http://redux-form.com/6.4.3/examples/material-ui/\nconst renderInput = ({\n    meta: { touched, error } = {},\n    input: { ...inputProps },\n    ...props\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\nclass Login extends Component {\n    login = auth =>\n        this.props.userLogin(\n            auth,\n            this.props.location.state\n                ? this.props.location.state.nextPathname\n                : '/'\n        );\n\n    render() {\n        const { classes, handleSubmit, isLoading, translate } = this.props;\n        return (\n            <div className={classes.main}>\n                <Card className={classes.card}>\n                    <div className={classes.avatar}>\n                        <Avatar className={classes.icon}>\n                            <LockIcon />\n                        </Avatar>\n                    </div>\n                    <form onSubmit={handleSubmit(this.login)}>\n                        <div className={classes.hint}>Hint: demo / demo</div>\n                        <div className={classes.form}>\n                            <div className={classes.input}>\n                                <Field\n                                    autoFocus\n                                    name=\"username\"\n                                    component={renderInput}\n                                    label={translate('ra.auth.username')}\n                                    disabled={isLoading}\n                                />\n                            </div>\n                            <div className={classes.input}>\n                                <Field\n                                    name=\"password\"\n                                    component={renderInput}\n                                    label={translate('ra.auth.password')}\n                                    type=\"password\"\n                                    disabled={isLoading}\n                                />\n                            </div>\n                        </div>\n                        <CardActions className={classes.actions}>\n                            <Button\n                                variant=\"raised\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                disabled={isLoading}\n                                className={classes.button}\n                                fullWidth\n                            >\n                                {isLoading && (\n                                    <CircularProgress size={25} thickness={2} />\n                                )}\n                                {translate('ra.auth.sign_in')}\n                            </Button>\n                        </CardActions>\n                    </form>\n                </Card>\n                <Notification />\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    ...propTypes,\n    authProvider: PropTypes.func,\n    classes: PropTypes.object,\n    previousRoute: PropTypes.string,\n    translate: PropTypes.func.isRequired,\n    userLogin: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({ isLoading: state.admin.loading > 0 });\n\nconst enhance = compose(\n    translate,\n    reduxForm({\n        form: 'signIn',\n        validate: (values, props) => {\n            const errors = {};\n            const { translate } = props;\n            if (!values.username) {\n                errors.username = translate('ra.validation.required');\n            }\n            if (!values.password) {\n                errors.password = translate('ra.validation.required');\n            }\n            return errors;\n        },\n    }),\n    connect(\n        mapStateToProps,\n        { userLogin }\n    ),\n    withStyles(styles)\n);\n\nconst EnhancedLogin = enhance(Login);\n\n// We need to put the MuiThemeProvider decoration in another component\n// Because otherwise the withStyles() HOC used in EnhancedLogin won't get\n// the right theme\nconst LoginWithTheme = props => (\n    <MuiThemeProvider theme={createMuiTheme(lightTheme)}>\n        <EnhancedLogin {...props} />\n    </MuiThemeProvider>\n);\n\nexport default LoginWithTheme;\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { withStyles } from '@material-ui/core/styles';\nimport { translate } from 'react-admin';\n\nconst styles = {\n    media: {\n        height: '18em',\n    },\n};\n\nconst mediaUrl = `https://marmelab.com/posters/beard-${parseInt(\n    Math.random() * 10,\n    10\n) + 1}.jpeg`;\n\nconst Welcome = ({ classes, translate }) => (\n    <Card>\n        <CardContent>\n            <Typography variant=\"headline\" component=\"h2\">\n                {translate('pos.dashboard.welcome.title')}\n            </Typography>\n            <Typography component=\"p\">\n                {translate('pos.dashboard.welcome.subtitle')}\n            </Typography>\n        </CardContent>\n        <CardActions style={{ justifyContent: 'flex-end' }}>\n            <Button href=\"https://marmelab.com/react-admin\">\n                <HomeIcon style={{ paddingRight: '0.5em' }} />\n                {translate('pos.dashboard.welcome.aor_button')}\n            </Button>\n            <Button href=\"https://github.com/marmelab/react-admin/tree/master/examples/demo\">\n                <CodeIcon style={{ paddingRight: '0.5em' }} />\n                {translate('pos.dashboard.welcome.demo_button')}\n            </Button>\n        </CardActions>\n    </Card>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(Welcome);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    card: {\n        float: 'left',\n        margin: '-20px 20px 0 15px',\n        zIndex: 100,\n        borderRadius: 3,\n    },\n    icon: {\n        float: 'right',\n        width: 54,\n        height: 54,\n        padding: 14,\n        color: '#fff',\n    },\n};\n\nconst CardIcon = ({ Icon, classes, bgColor }) => (\n    <Card className={classes.card} style={{ backgroundColor: bgColor }}>\n        <Icon className={classes.icon} />\n    </Card>\n);\n\nexport default withStyles(styles)(CardIcon);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport DollarIcon from '@material-ui/icons/AttachMoney';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nconst styles = {\n    main: {\n        flex: '1',\n        marginRight: '1em',\n        marginTop: 20,\n    },\n    card: {\n        overflow: 'inherit',\n        textAlign: 'right',\n        padding: 16,\n        minHeight: 52,\n    },\n};\n\nconst MonthlyRevenue = ({ value, translate, classes }) => (\n    <div className={classes.main}>\n        <CardIcon Icon={DollarIcon} bgColor=\"#31708f\" />\n        <Card className={classes.card}>\n            <Typography className={classes.title} color=\"textSecondary\">\n                {translate('pos.dashboard.monthly_revenue')}\n            </Typography>\n            <Typography variant=\"headline\" component=\"h2\">\n                {value}\n            </Typography>\n        </Card>\n    </div>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(MonthlyRevenue);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nconst styles = {\n    main: {\n        flex: '1',\n        marginLeft: '1em',\n        marginTop: 20,\n    },\n    card: {\n        overflow: 'inherit',\n        textAlign: 'right',\n        padding: 16,\n        minHeight: 52,\n    },\n};\n\nconst NbNewOrders = ({ value, translate, classes }) => (\n    <div className={classes.main}>\n        <CardIcon Icon={ShoppingCartIcon} bgColor=\"#ff9800\" />\n        <Card className={classes.card}>\n            <Typography className={classes.title} color=\"textSecondary\">\n                {translate('pos.dashboard.new_orders')}\n            </Typography>\n            <Typography variant=\"headline\" component=\"h2\">\n                {value}\n            </Typography>\n        </Card>\n    </div>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(NbNewOrders);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\n\nconst style = theme => ({\n    root: {\n        flex: 1,\n    },\n    avatar: {\n        background: theme.palette.background.avatar,\n    },\n    cost: {\n        marginRight: '1em',\n        color: theme.palette.text.primary,\n    },\n});\n\nconst PendingOrders = ({ orders = [], customers = {}, translate, classes }) => (\n    <Card className={classes.root}>\n        <CardHeader title={translate('pos.dashboard.pending_orders')} />\n        <List dense={true}>\n            {orders.map(record => (\n                <ListItem\n                    key={record.id}\n                    button\n                    component={Link}\n                    to={`/commands/${record.id}`}\n                >\n                    {customers[record.customer_id] ? (\n                        <Avatar\n                            className={classes.avatar}\n                            src={`${\n                                customers[record.customer_id].avatar\n                            }?size=32x32`}\n                        />\n                    ) : (\n                        <Avatar />\n                    )}\n                    <ListItemText\n                        primary={new Date(record.date).toLocaleString('en-GB')}\n                        secondary={translate('pos.dashboard.order.items', {\n                            smart_count: record.basket.length,\n                            nb_items: record.basket.length,\n                            customer_name: customers[record.customer_id]\n                                ? `${\n                                      customers[record.customer_id].first_name\n                                  } ${customers[record.customer_id].last_name}`\n                                : '',\n                        })}\n                    />\n                    <ListItemSecondaryAction>\n                        <span className={classes.cost}>{record.total}$</span>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            ))}\n        </List>\n    </Card>\n);\n\nconst enhance = compose(\n    withStyles(style),\n    translate\n);\n\nexport default enhance(PendingOrders);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nimport StarRatingField from '../resources/reviews/StarRatingField';\n\nconst styles = theme => ({\n    main: {\n        flex: '1',\n        marginRight: '1em',\n        marginTop: 20,\n    },\n    titleLink: { textDecoration: 'none', color: 'inherit' },\n    card: {\n        padding: '16px 0',\n        overflow: 'inherit',\n        textAlign: 'right',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    value: {\n        padding: '0 16px',\n        minHeight: 48,\n    },\n    avatar: {\n        background: theme.palette.background.avatar,\n    },\n    listItemText: {\n        overflowY: 'hidden',\n        height: '4em',\n        display: '-webkit-box',\n        WebkitLineClamp: 2,\n        WebkitBoxOrient: 'vertical',\n    },\n});\n\nconst location = {\n    pathname: 'reviews',\n    query: { filter: JSON.stringify({ status: 'pending' }) },\n};\n\nconst PendingReviews = ({\n    reviews = [],\n    customers = {},\n    nb,\n    translate,\n    classes,\n}) => (\n    <div className={classes.main}>\n        <CardIcon Icon={CommentIcon} bgColor=\"#f44336\" />\n        <Card className={classes.card}>\n            <Typography className={classes.title} color=\"textSecondary\">\n                {translate('pos.dashboard.pending_reviews')}\n            </Typography>\n            <Typography\n                variant=\"headline\"\n                component=\"h2\"\n                className={classes.value}\n            >\n                <Link to={location} className={classes.titleLink}>\n                    {nb}\n                </Link>\n            </Typography>\n            <Divider />\n            <List>\n                {reviews.map(record => (\n                    <ListItem\n                        key={record.id}\n                        button\n                        component={Link}\n                        to={`/reviews/${record.id}`}\n                    >\n                        {customers[record.customer_id] ? (\n                            <Avatar\n                                src={`${\n                                    customers[record.customer_id].avatar\n                                }?size=32x32`}\n                                className={classes.avatar}\n                            />\n                        ) : (\n                            <Avatar />\n                        )}\n\n                        <ListItemText\n                            primary={<StarRatingField record={record} />}\n                            secondary={record.comment}\n                            className={classes.listItemText}\n                            style={{ paddingRight: 0 }}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </Card>\n    </div>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(PendingReviews);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CustomerIcon from '@material-ui/icons/PersonAdd';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nconst styles = theme => ({\n    main: {\n        flex: '1',\n        marginLeft: '1em',\n        marginTop: 20,\n    },\n    card: {\n        padding: '16px 0',\n        overflow: 'inherit',\n        textAlign: 'right',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    value: {\n        padding: '0 16px',\n        minHeight: 48,\n    },\n    avatar: {\n        background: theme.palette.background.avatar,\n    },\n    listItemText: {\n        paddingRight: 0,\n    },\n});\n\nconst NewCustomers = ({ visitors = [], nb, translate, classes }) => (\n    <div className={classes.main}>\n        <CardIcon Icon={CustomerIcon} bgColor=\"#4caf50\" />\n        <Card className={classes.card}>\n            <Typography className={classes.title} color=\"textSecondary\">\n                {translate('pos.dashboard.new_customers')}\n            </Typography>\n            <Typography\n                variant=\"headline\"\n                component=\"h2\"\n                className={classes.value}\n            >\n                {nb}\n            </Typography>\n            <Divider />\n            <List>\n                {visitors.map(record => (\n                    <ListItem\n                        button\n                        to={`/customers/${record.id}`}\n                        component={Link}\n                        key={record.id}\n                    >\n                        <Avatar\n                            src={`${record.avatar}?size=32x32`}\n                            className={classes.avatar}\n                        />\n                        <ListItemText\n                            primary={`${record.first_name} ${record.last_name}`}\n                            className={classes.listItemText}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </Card>\n    </div>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(NewCustomers);\n","import React, { Component } from 'react';\nimport { GET_LIST, GET_MANY, Responsive, withDataProvider } from 'react-admin';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\n\nimport Welcome from './Welcome';\nimport MonthlyRevenue from './MonthlyRevenue';\nimport NbNewOrders from './NbNewOrders';\nimport PendingOrders from './PendingOrders';\nimport PendingReviews from './PendingReviews';\nimport NewCustomers from './NewCustomers';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Modal from '@material-ui/core/Modal';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport InputIcon from '@material-ui/icons/Input';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport FindInPageIcon from '@material-ui/icons/FindInPage';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport HelpIcon from '@material-ui/icons/Help';\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport MapIcon from '@material-ui/icons/Map';\nimport { Icon } from '@material-ui/core';\nconst styles = {\n    flex: { display: 'flex' },\n    flexColumn: { display: 'flex', flexDirection: 'column' },\n    leftCol: { flex: 1, marginRight: '1em' },\n    rightCol: { flex: 1, marginLeft: '1em' },\n    singleCol: { marginTop: '2em', marginBottom: '2em' },\n};\n\nclass Dashboard extends Component {\n    state = {};\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    componentDidUpdate(prevProps) {\n        // handle refresh\n        if (this.props.version !== prevProps.version) {\n            this.fetchData();\n        }\n    }\n\n    fetchData() {\n        this.fetchOrders();\n        this.fetchReviews();\n        this.fetchCustomers();\n    }\n\n    async fetchOrders() {\n        const { dataProvider } = this.props;\n        const aMonthAgo = new Date();\n        aMonthAgo.setDate(aMonthAgo.getDate() - 30);\n        const { data: recentOrders } = await dataProvider(\n            GET_LIST,\n            'commands',\n            {\n                filter: { date_gte: aMonthAgo.toISOString() },\n                sort: { field: 'date', order: 'DESC' },\n                pagination: { page: 1, perPage: 50 },\n            }\n        );\n        const aggregations = recentOrders\n            .filter(order => order.status !== 'cancelled')\n            .reduce(\n                (stats, order) => {\n                    if (order.status !== 'cancelled') {\n                        stats.revenue += order.total;\n                        stats.nbNewOrders++;\n                    }\n                    if (order.status === 'ordered') {\n                        stats.pendingOrders.push(order);\n                    }\n                    return stats;\n                },\n                {\n                    revenue: 0,\n                    nbNewOrders: 0,\n                    pendingOrders: [],\n                }\n            );\n        this.setState({\n            revenue: aggregations.revenue.toLocaleString(undefined, {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0,\n            }),\n            nbNewOrders: aggregations.nbNewOrders,\n            pendingOrders: aggregations.pendingOrders,\n        });\n        const { data: customers } = await dataProvider(GET_MANY, 'customers', {\n            ids: aggregations.pendingOrders.map(order => order.customer_id),\n        });\n        this.setState({\n            pendingOrdersCustomers: customers.reduce((prev, customer) => {\n                prev[customer.id] = customer; // eslint-disable-line no-param-reassign\n                return prev;\n            }, {}),\n        });\n    }\n\n    async fetchReviews() {\n        const { dataProvider } = this.props;\n        const { data: reviews } = await dataProvider(GET_LIST, 'reviews', {\n            filter: { status: 'pending' },\n            sort: { field: 'date', order: 'DESC' },\n            pagination: { page: 1, perPage: 100 },\n        });\n        const nbPendingReviews = reviews.reduce(nb => ++nb, 0);\n        const pendingReviews = reviews.slice(0, Math.min(10, reviews.length));\n        this.setState({ pendingReviews, nbPendingReviews });\n        const { data: customers } = await dataProvider(GET_MANY, 'customers', {\n            ids: pendingReviews.map(review => review.customer_id),\n        });\n        this.setState({\n            pendingReviewsCustomers: customers.reduce((prev, customer) => {\n                prev[customer.id] = customer; // eslint-disable-line no-param-reassign\n                return prev;\n            }, {}),\n        });\n    }\n\n    async fetchCustomers() {\n        const { dataProvider } = this.props;\n        const aMonthAgo = new Date();\n        aMonthAgo.setDate(aMonthAgo.getDate() - 30);\n        const { data: newCustomers } = await dataProvider(\n            GET_LIST,\n            'customers',\n            {\n                filter: {\n                    has_ordered: true,\n                    first_seen_gte: aMonthAgo.toISOString(),\n                },\n                sort: { field: 'first_seen', order: 'DESC' },\n                pagination: { page: 1, perPage: 100 },\n            }\n        );\n        this.setState({\n            newCustomers,\n            nbNewCustomers: newCustomers.reduce(nb => ++nb, 0),\n        });\n    }\n\n    render() {\n        const {\n            nbNewCustomers,\n            nbNewOrders,\n            nbPendingReviews,\n            newCustomers,\n            pendingOrders,\n            pendingOrdersCustomers,\n            pendingReviews,\n            pendingReviewsCustomers,\n            revenue,\n        } = this.state;\n        const started = true;\n        const value = 0;\n        return (\n            <Responsive\n                xsmall={\n                    <div>\n                    <AppBar position=\"static\" color=\"default\">\n                      <Tabs\n                        value={value}\n                        onChange={this.handleChangeTab}\n                        variant=\"scrollable\"\n                        scrollButtons=\"on\"\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                      >\n                      <Tab label=\"Input Data\" \n                      \n                          icon={<InputIcon />} />\n                        <Tab label=\"Validate JSON\" \n                             disabled={!started}\n                            icon={<FindInPageIcon />} />\n                        <Tab label=\"Preview Table\" \n                             disabled={!started}\n                            icon={<ViewListIcon />} />\n                        <Tab label=\"Configure Fields\" \n                             disabled={!started}\n                            icon={<Icon>adb</Icon>} />\n                        <Tab label=\"Preview Codes\" \n                             disabled={!started}\n                            icon={<AssignmentIcon />} />\n                        <Tab label=\"Create Local\" \n                            disabled={!started}\n                            icon={<ThumbDown />} />\n                        <Tab label=\"Graph\" \n                             disabled={!started}\n                            icon={<ThumbUp />} />\n                        <Tab label=\"Map\" \n                             disabled={!started}\n                            icon={<MapIcon />} />\n                      </Tabs>\n                    </AppBar>\n                        <div style={styles.flexColumn}>\n                            <div style={{ marginBottom: '2em' }}>\n                                <Welcome />\n                            </div>\n                            <div style={styles.flex}>\n                                <MonthlyRevenue value={revenue} />\n                                <NbNewOrders value={nbNewOrders} />\n                            </div>\n                            <div style={styles.singleCol}>\n                                <PendingOrders\n                                    orders={pendingOrders}\n                                    customers={pendingOrdersCustomers}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                }\n                small={\n                    <div style={styles.flexColumn}>\n                        <div style={styles.singleCol}>\n                            <Welcome />\n                        </div>\n                        <div style={styles.flex}>\n                            <MonthlyRevenue value={revenue} />\n                            <NbNewOrders value={nbNewOrders} />\n                        </div>\n                        <div style={styles.singleCol}>\n                            <PendingOrders\n                                orders={pendingOrders}\n                                customers={pendingOrdersCustomers}\n                            />\n                        </div>\n                    </div>\n                }\n                medium={\n                    <div style={styles.flex}>\n                        <div style={styles.leftCol}>\n                            <div style={styles.flex}>\n                                <MonthlyRevenue value={revenue} />\n                                <NbNewOrders value={nbNewOrders} />\n                            </div>\n                            <div style={styles.singleCol}>\n                                <Welcome />\n                            </div>\n                            <div style={styles.singleCol}>\n                                <PendingOrders\n                                    orders={pendingOrders}\n                                    customers={pendingOrdersCustomers}\n                                />\n                            </div>\n                        </div>\n                        <div style={styles.rightCol}>\n                            <div style={styles.flex}>\n                                <PendingReviews\n                                    nb={nbPendingReviews}\n                                    reviews={pendingReviews}\n                                    customers={pendingReviewsCustomers}\n                                />\n                                <NewCustomers\n                                    nb={nbNewCustomers}\n                                    visitors={newCustomers}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                }\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    version: state.admin.ui.viewVersion,\n});\n\nexport default compose(\n    connect(mapStateToProps),\n    withDataProvider\n)(Dashboard);\n","import DashboardComponent from './Dashboard';\n\nexport const Dashboard = DashboardComponent;\n","import englishMessages from 'ra-language-english';\n\nexport default {\n    ...englishMessages,\n    pos: {\n        search: 'Search',\n        configuration: 'Configuration',\n        language: 'Language',\n        theme: {\n            name: 'Theme',\n            light: 'Light',\n            dark: 'Dark',\n        },\n        dashboard: {\n            monthly_revenue: 'Monthly Revenue',\n            new_orders: 'New Orders',\n            pending_reviews: 'Pending Reviews',\n            new_customers: 'New Customers',\n            pending_orders: 'Pending Orders',\n            order: {\n                items:\n                    'by %{customer_name}, one item |||| by %{customer_name}, %{nb_items} items',\n            },\n            welcome: {\n                title: 'Welcome to react-admin demo',\n                subtitle:\n                    \"This is the admin of an imaginary poster shop. Fell free to explore and modify the data - it's local to your computer, and will reset each time you reload.\",\n                aor_button: 'react-admin site',\n                demo_button: 'Source for this demo',\n            },\n        },\n        menu: {\n            sales: 'Sales',\n            catalog: 'Catalog',\n            customers: 'Customers',\n        },\n    },\n    resources: {\n        people: {\n            name: 'Person |||| People'\n        },\n        customers: {\n            name: 'Customer |||| Customers',\n            fields: {\n                commands: 'Orders',\n                groups: 'Segments',\n                last_seen_gte: 'Visited Since',\n                name: 'Name',\n                total_spent: 'Total spent',\n            },\n            tabs: {\n                identity: 'Identity',\n                address: 'Address',\n                orders: 'Orders',\n                reviews: 'Reviews',\n                stats: 'Stats',\n            },\n            page: {\n                delete: 'Delete Customer',\n            },\n        },\n        commands: {\n            name: 'Order |||| Orders',\n            title: 'Order %{reference}',\n            fields: {\n                basket: {\n                    delivery: 'Delivery',\n                    reference: 'Reference',\n                    quantity: 'Quantity',\n                    sum: 'Sum',\n                    tax_rate: 'Tax Rate',\n                    total: 'Total',\n                    unit_price: 'Unit Price',\n                },\n                customer_id: 'Customer',\n                date_gte: 'Passed Since',\n                date_lte: 'Passed Before',\n                total_gte: 'Min amount',\n                status: 'Status',\n                returned: 'Returned',\n            },\n        },\n        invoices: {\n            name: 'Invoice |||| Invoices',\n            fields: {\n                date: 'Invoice date',\n                customer_id: 'Customer',\n                command_id: 'Order',\n                date_gte: 'Passed Since',\n                date_lte: 'Passed Before',\n                total_gte: 'Min amount',\n                address: 'Address',\n            },\n        },\n        products: {\n            name: 'Poster |||| Posters',\n            fields: {\n                category_id: 'Category',\n                height_gte: 'Min height',\n                height_lte: 'Max height',\n                height: 'Height',\n                image: 'Image',\n                price: 'Price',\n                reference: 'Reference',\n                stock_lte: 'Low Stock',\n                stock: 'Stock',\n                thumbnail: 'Thumbnail',\n                width_gte: 'Min width',\n                width_lte: 'Max width',\n                width: 'Width',\n            },\n            tabs: {\n                image: 'Image',\n                details: 'Details',\n                description: 'Description',\n                reviews: 'Reviews',\n            },\n        },\n        categories: {\n            name: 'Category |||| Categories',\n            fields: {\n                products: 'Products',\n            },\n        },\n        reviews: {\n            name: 'Review |||| Reviews',\n            detail: 'Review detail',\n            fields: {\n                customer_id: 'Customer',\n                command_id: 'Order',\n                product_id: 'Product',\n                date_gte: 'Posted since',\n                date_lte: 'Posted before',\n                date: 'Date',\n                comment: 'Comment',\n                rating: 'Rating',\n            },\n            action: {\n                accept: 'Accept',\n                reject: 'Reject',\n            },\n            notification: {\n                approved_success: 'Review approved',\n                approved_error: 'Error: Review not approved',\n                rejected_success: 'Review rejected',\n                rejected_error: 'Error: Review not rejected',\n            },\n        },\n        segments: {\n            name: 'Segments',\n            fields: {\n                customers: 'Customers',\n                name: 'Name',\n            },\n            data: {\n                compulsive: 'Compulsive',\n                collector: 'Collector',\n                ordered_once: 'Ordered once',\n                regular: 'Regular',\n                returns: 'Returns',\n                reviewer: 'Reviewer',\n            },\n        },\n    },\n};\n","import {\n    GET_LIST,\n    GET_ONE,\n    GET_MANY,\n    GET_MANY_REFERENCE,\n    CREATE,\n    UPDATE,\n    DELETE,\n    // fetchUtils,\n} from 'react-admin';\nimport Dexie from 'dexie';\n\n\n\n\nconst db = new Dexie('APP');\n\n\n\n// db.delete();\ndb.version(1).stores({\n  // from \n  people:\"++id,first_name,last_name,email,address,zipcode,city,avatar,birthday,first_seen,last_seen,has_ordered,latest_purchase,has_newsletter,groups,nb_commands,total_spent\",\n  customers:\"++id,first_name,last_name,email,address,zipcode,city,avatar,birthday,first_seen,last_seen,has_ordered,latest_purchase,has_newsletter,groups,nb_commands,total_spent\",\n  categories:\"++id,name,parent_id\",\n  products:\"++id,category_id,reference,width,height,price,thumbnail,image,description,stock\",\n  commands:\"++id,reference,date,customer_id,basket,total_ex_taxes,delivery_fees,tax_rate,taxes,total,status,returned\",\n  invoices:\"++id,date,command_id,customer_id,total_ex_taxes,delivery_fees,tax_rate,taxes,total\",\n  reviews:\"++id,date,status,command_id,product_id,customer_id,rating,comment\",\n\n  tags:\"++id,name,parent_id,published\",\n  servers: '++id,name,description,ip,hostname,status,operating_system,ssh_port,created,updated',\n  todos: '++id,title',\n  history:'++id,url,src,alt,href,time',\n  galleries:'++id,title,host,url,slug,src,hash',\n\n  users:\"++id,name,username,email,avatar,created,updated\",\n  posts:\"++id,title,body,created,updated\"\n});\n\n/**\n * @param {string} type Request type, e.g GET_LIST\n * @param {string} resource Resource name, e.g. \"posts\"\n * @param {Object} payload Request parameters. Depends on the request type\n * @returns {Promise} the Promise for response\n */\nexport default (type, resource, params) => new Promise((resolve, reject) => {\n  console.log([type, resource, params]);\n    db.open();\n    switch (type) {\n      \n\n      case DELETE:\n\n      break;\n\n\n      case GET_ONE:\n      // alert(\"OK\");\n       db.table(resource).get(parseInt(params.id)).then((data) => {\n        // console.log(data);\n        // alert(\"OI\");\n         resolve({data});\n      });\n      \n      \n      break;\n\n      case CREATE:\n\n       db.table(resource)\n      .add(params.data)\n      .then((id) => {\n        resolve(params)\n      });\n\n      // db.table(this.tableName)\n      break;\n\n\n      case UPDATE:\n      // alert(\"UPDATE\");\n      // console.log(params);\n      // return false;\n       db.table(resource).update(params.data.id, params.data).then((updated) => {\n        // console.log(updated);\n        // alert('update made');\n        resolve(params);\n      });\n\n      break;\n\n      case GET_LIST:\n      case GET_MANY:\n      case GET_MANY_REFERENCE:\n         db.table(resource).count((count) => {\n  \n          let collection = db.table(resource);\n           collection\n            .offset(0)\n            .limit(100)\n            .toArray()\n            .then((data) => {\n              console.log(data);\n              resolve({\n                data: data,\n                total:count,\n                page: 1,\n                totalCount: count,\n              })\n            })\n          })\n  \n        break;\n\n\n\n        default:\n\n        break;\n    }\n    \n  })\n","import React, { Component } from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport resources from './resources/';\nimport customRoutes from './routes';\n\n\nimport authProvider from './authProvider';\nimport sagas from './sagas';\nimport themeReducer from './themeReducer';\nimport { Login, Layout } from './layout';\nimport { Dashboard } from './dashboard';\nimport englishMessages from './i18n/en';\nimport dexieDataProxiver from './providers/dexie'\n\n\n\nconst i18nProvider = locale => {\n  if (locale === 'fr') {\n    return import('./i18n/fr').then(messages => messages.default);\n  }\n\n  if (locale === 'pt') {\n    return import('./i18n/pt').then(messages => messages.default);\n  }\n\n\n\n  // Always fallback on english\n  return englishMessages;\n};\n\nclass App extends Component {\n\n  state = { dataProvider: null };\n\n  async componentWillMount() {\n    // this.restoreFetch = await fakeServerFactory(\n    //     // process.env.REACT_APP_DATA_PROVIDER\n    // );\n\n    // const dataProvider = await dataProviderFactory(\n    //     // process.env.REACT_APP_DATA_PROVIDER\n    // );\n    const dataProvider = dexieDataProxiver;\n    this.setState({ dataProvider });\n  }\n\n\n  componentWillUnmount() {\n    // this.restoreFetch();\n  }\n  render() {\n    const { dataProvider } = this.state;\n\n    if (!dataProvider) {\n      return (\n        <div className=\"loader-container\">\n          <div className=\"loader\">Loading...</div>\n        </div>\n\n\n      );\n    }\n    return (\n      <Admin\n        title=\"BETA ADMIN\"\n        dataProvider={dataProvider}\n        customReducers={{ theme: themeReducer }}\n        customSagas={sagas}\n        customRoutes={customRoutes}\n        authProvider={authProvider}\n        dashboard={Dashboard}\n        loginPage={Login}\n        appLayout={Layout}\n        locale=\"en\"\n        i18nProvider={i18nProvider}\n        style={{\n          height: \"100%\"\n        }}\n      >\n\n\n        <Resource name=\"posts\"  {...resources.posts} />\n        <Resource name=\"users\" />\n        <Resource name=\"people\" {...resources.people} />\n        <Resource name=\"tags\" {...resources.tags} />\n        <Resource name=\"customers\" {...resources.visitors} />\n        <Resource name=\"invoices\" {...resources.invoices} />\n        <Resource name=\"reviews\" {...resources.reviews} />\n        <Resource name=\"categories\" {...resources.categories} />\n        <Resource name=\"products\" {...resources.products} />\n      </Admin>\n    );\n  }\n\n\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import app from './mson-app';\n// import { render } from 'mson-react';\n// import 'typeface-roboto';\n\n// // Render the app\n// render(app);\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ezgif.com-gif-to-webm.5fb97c4c.webm\";"],"sourceRoot":""}